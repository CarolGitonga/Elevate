var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.303,1,0.889]],["body/components/AdminComponent.html",[0,0.481,1,1.51,2,1.674,3,0.277,4,0.241,5,1.152,6,1.337,7,1.337,8,1.337,9,0.241,10,2.861,11,1.241,12,2.206,13,2.36,14,3.017,15,1.804,16,5.195,17,1.804,18,4.591,19,0.482,20,1.246,21,5.983,22,0.736,23,3.403,24,2.552,25,3.637,26,0.777,27,3.403,28,0.627,29,0.028,30,0.715,31,0.482,32,0.627,33,2.73,34,3.403,35,0.857,36,1.241,37,0.481,38,0.277,39,1.444,40,2.861,41,0.277,42,0.138,43,1.152,44,1.07,45,3.403,46,2.861,47,4.591,48,1.894,49,2.286,50,2.491,51,1.337,52,1.804,53,1.342,54,0.924,55,2.185,56,1.337,57,1.337,58,0.995,59,1.337,60,0.924,61,1.337,62,0.924,63,1.072,64,1.337,65,0.995,66,1.337,67,0.924,68,1.337,69,0.924,70,0.68,71,1.804,72,0.924,73,0.917,74,1.337,75,0.924,76,0.857,77,1.241,78,0.857,79,1.152,80,1.337,81,0.019,82,0.019]],["title/modules/AdminModule.html",[83,1.777,84,2.153]],["body/modules/AdminModule.html",[0,0.547,1,1.643,3,0.266,4,0.231,9,0.231,29,0.029,33,2.658,37,0.585,38,0.266,39,1.387,41,0.266,42,0.132,49,2.225,50,1.775,60,1.643,69,1.643,70,0.654,72,1.672,73,0.893,75,1.643,81,0.019,82,0.019,84,4.323,85,1.501,86,2.051,87,2.75,88,2.75,89,2.75,90,3.284,91,2.425,92,1.387,93,1.501,94,2.406,95,3.288,96,2.937,97,4.469,98,2.75,99,2.658,100,3.757,101,1.945,102,2.406,103,3.271,104,3.271,105,3.271,106,2.406,107,4.469,108,2.406,109,3.271,110,2.406,111,2.937,112,2.75,113,4.533,114,2.75,115,1.945,116,2.75,117,2.75,118,2.75,119,3.288,120,1.945]],["title/components/AppComponent.html",[0,0.303,58,0.957]],["body/components/AppComponent.html",[0,0.504,1,1.014,2,1.781,3,0.304,4,0.264,5,1.265,6,1.469,7,1.469,8,1.469,9,0.264,11,1.363,12,2.235,13,2.394,15,1.92,17,1.92,19,0.529,26,0.633,29,0.028,30,0.7,31,0.529,37,0.346,38,0.304,41,0.304,42,0.151,48,1.363,51,1.469,52,1.92,53,1.428,54,1.014,55,2.268,56,1.469,57,1.469,58,1.687,59,1.469,60,1.014,61,1.469,62,1.014,63,1.141,64,1.469,65,1.092,66,1.469,67,1.014,68,1.469,69,1.014,70,0.747,71,1.92,72,1.014,73,0.976,74,1.469,75,1.014,76,0.942,77,1.363,78,0.942,79,1.265,80,1.469,81,0.021,82,0.021,121,3.142,122,3.594,123,5.443,124,4.886,125,0.976,126,5.443,127,1.585,128,1.363,129,1.176,130,4.107,131,3.737]],["title/modules/AppModule.html",[83,1.777,132,2.153]],["body/modules/AppModule.html",[3,0.327,4,0.284,9,0.284,13,1.465,29,0.029,37,0.567,38,0.327,41,0.327,42,0.163,58,1.939,81,0.022,82,0.022,85,1.844,86,2.35,91,2.778,92,1.705,93,1.844,95,3.767,96,2.642,99,3.045,120,3.045,132,4.338,133,3.379,134,3.379,135,3.379,136,3.379,137,3.725,138,3.725,139,4.019,140,4.304,141,4.304,142,2.957,143,2.642,144,4.019,145,4.019,146,4.019]],["title/modules/AppRoutingModule.html",[83,1.777,137,1.948]],["body/modules/AppRoutingModule.html",[0,0.51,3,0.312,4,0.271,9,0.271,14,2.521,29,0.029,37,0.573,38,0.312,39,1.627,41,0.312,42,0.155,48,1.398,62,1.349,67,1.349,76,1.252,81,0.021,82,0.021,85,1.76,86,2.28,91,2.696,92,1.627,93,1.76,96,3.266,99,2.955,102,3.656,113,3.656,115,3.467,119,2.822,120,2.281,137,3.679,147,3.225,148,3.225,149,3.869,150,3.836,151,3.836,152,3.623,153,3.225,154,2.521,155,3.225,156,3.225,157,2.822,158,3.836,159,3.225,160,3.836,161,3.836,162,3.836,163,3.836,164,3.836,165,3.836,166,3.836,167,3.836,168,3.225]],["title/components/AuthComponent.html",[0,0.303,60,0.889]],["body/components/AuthComponent.html",[0,0.442,1,0.788,2,1.499,3,0.236,4,0.205,5,0.983,6,1.141,7,1.141,8,1.141,9,0.205,11,1.058,12,2.151,13,2.297,14,2.703,15,1.616,17,1.616,19,0.411,20,1.116,22,0.628,24,2.384,25,3.387,26,0.929,28,0.758,29,0.029,30,0.753,31,0.777,32,0.758,33,3.261,35,0.731,36,1.058,37,0.481,38,0.236,39,1.231,40,2.44,41,0.236,42,0.117,43,0.983,44,0.913,48,1.058,51,1.141,52,1.616,53,1.202,54,0.788,55,2.041,56,1.141,57,1.141,58,0.848,59,1.141,60,1.41,61,1.141,62,0.788,63,0.961,64,1.141,65,0.848,66,1.141,67,0.788,68,1.141,69,0.788,70,0.58,71,1.616,72,0.788,73,0.822,74,1.141,75,0.788,76,0.731,77,1.058,78,0.731,79,0.983,80,1.141,81,0.017,82,0.017,101,1.726,125,0.822,127,2.416,169,2.44,170,4.776,171,4.112,172,2.391,173,5.484,174,4.61,175,4.015,176,3.025,177,2.135,178,4.112,179,4.112,180,4.367,181,2.903,182,3.457,183,2.903,184,2.903,185,2.44,186,2.903,187,4.112,188,2.903,189,2.903,190,2.903,191,2.903,192,2.903,193,4.112,194,2.903,195,1.726,196,2.44,197,4.112,198,3.457,199,3.457,200,4.112]],["title/injectables/AuthGuard.html",[90,1.777,201,0.603]],["body/injectables/AuthGuard.html",[3,0.332,4,0.288,9,0.288,19,0.578,20,1.403,22,0.882,24,2.738,25,3.74,26,0.876,28,0.952,29,0.029,30,0.665,31,0.732,32,0.952,33,3.375,35,1.028,37,0.525,38,0.332,39,1.731,41,0.332,42,0.165,43,1.382,44,1.284,81,0.022,82,0.022,90,2.805,115,3.074,122,3.002,177,3.002,201,0.952,202,1.604,203,3.431,204,4.081,205,4.346,206,5.015,207,3.73,208,5.015,209,4.081,210,3.431,211,2.805,212,3.431,213,3.431,214,4.081,215,4.081,216,1.75,217,2.427,218,2.214]],["title/injectables/AuthService.html",[24,1.503,201,0.603]],["body/injectables/AuthService.html",[3,0.319,4,0.277,9,0.277,19,0.555,20,1.368,22,0.848,24,2.312,26,0.996,28,0.928,29,0.029,30,0.648,31,0.714,32,0.928,35,1.27,36,1.429,37,0.516,38,0.319,41,0.319,42,0.159,43,1.327,81,0.021,82,0.021,122,2.884,127,2.579,174,4.942,175,3.296,176,3.708,201,0.928,202,1.541,211,2.127,213,3.296,216,1.706,219,3.296,220,3.864,221,3.708,222,5.569,223,2.884,224,2.697,225,3.921,226,3.708,227,3.921,228,3.921,229,3.312,230,3.921,231,3.921,232,3.921,233,2.332,234,2.884,235,3.921,236,3.921,237,5.04,238,2.997]],["title/injectables/Cart.html",[63,0.765,201,0.603]],["body/injectables/Cart.html",[3,0.157,4,0.136,9,0.136,19,0.651,20,0.821,26,0.896,28,0.688,29,0.029,30,0.48,31,0.691,32,0.688,35,1.333,36,1.677,37,0.28,38,0.157,41,0.246,42,0.122,44,1.175,53,0.562,63,1.141,73,1.236,81,0.013,82,0.013,92,0.816,125,1.021,128,1.677,129,1.536,172,2.188,201,0.557,202,0.756,216,1.024,218,1.044,220,2.782,239,1.416,240,4.447,241,4.447,242,4.772,243,3.023,244,3.558,245,3.023,246,3.023,247,2.542,248,5.199,249,2.006,250,1.924,251,2.107,252,1.924,253,1.924,254,2.542,255,1.924,256,1.387,257,1.416,258,2.542,259,1.924,260,2.138,261,1.924,262,1.924,263,4.172,264,1.924,265,1.144,266,2.747,267,3.139,268,1.617,269,1.044,270,0.756,271,3.558,272,2.542,273,3.139,274,1.617,275,4.105,276,3.595,277,2.542,278,3.114,279,2.771,280,1.617,281,2.772,282,3.477,283,2.517,284,3.209,285,2.542,286,1.617,287,3.592,288,1.617,289,2.455,290,1.617,291,1.617,292,1.617,293,1.102,294,1.265,295,3.139,296,1.617,297,1.617,298,1.617,299,1.265,300,3.867,301,1.416,302,1.617,303,2.772,304,1.617,305,1.617,306,1.617,307,2.542,308,1.617,309,1.617,310,1.617,311,1.617,312,1.617,313,1.617,314,1.617,315,1.617,316,1.265,317,1.416,318,2.542,319,1.617,320,3.139,321,3.139,322,1.617,323,1.617,324,1.617,325,1.617,326,1.617,327,2.542,328,1.144,329,1.617,330,2.542,331,2.542,332,2.224,333,1.617,334,1.617,335,3.139,336,1.617,337,1.617,338,1.617,339,1.617,340,2.542,341,3.037,342,1.617,343,1.617,344,2.542,345,2.542,346,1.617,347,1.617,348,1.617,349,1.617,350,1.617,351,2.542,352,2.542,353,1.044,354,1.617,355,1.617,356,2.224,357,1.987,358,2.542,359,1.617,360,1.265,361,1.617,362,1.617]],["title/components/CartDetailComponent.html",[0,0.303,62,0.889]],["body/components/CartDetailComponent.html",[0,0.451,1,0.818,2,1.539,3,0.245,4,0.213,5,1.02,6,1.184,7,1.184,8,1.184,9,0.213,11,1.098,12,2.164,13,2.312,15,1.659,17,1.659,19,0.427,22,0.651,26,0.715,28,0.555,29,0.029,30,0.679,31,0.598,32,0.555,37,0.391,38,0.245,41,0.245,42,0.122,48,1.098,51,1.184,52,1.659,53,1.234,54,0.818,55,2.075,56,1.184,57,1.184,58,0.88,59,1.184,60,0.818,61,1.184,62,1.433,63,1.553,64,1.184,65,0.88,66,1.184,67,0.818,68,1.184,69,0.818,70,0.602,71,1.659,72,0.818,73,1.055,74,1.184,75,0.818,76,0.759,77,1.098,78,0.759,79,1.02,80,1.184,81,0.018,82,0.018,125,0.843,154,3.203,172,1.659,260,2.265,317,3.105,341,2.51,353,1.634,357,2.774,363,3.585,364,2.532,365,4.221,366,4.873,367,4.221,368,2.216,369,3.012,370,3.012,371,2.216,372,3.105,373,3.105,374,4.221,375,4.221,376,3.548,377,4.221,378,4.221,379,3.788,380,3.788,381,4.221,382,3.548,383,4.221,384,4.221,385,3.548]],["title/classes/CartLine.html",[42,0.133,263,2.153]],["body/classes/CartLine.html",[3,0.173,4,0.15,9,0.15,19,0.682,22,0.459,26,0.756,28,0.391,29,0.029,30,0.273,31,0.563,32,0.391,35,1.002,37,0.302,38,0.173,41,0.266,42,0.132,44,0.668,53,0.621,63,1.125,73,1.256,81,0.014,82,0.014,92,0.901,125,1.058,128,0.774,129,1.027,172,2.148,201,0.601,216,1.105,218,1.152,220,1.396,221,2.401,239,1.562,240,4.275,241,4.275,242,4.713,244,1.785,247,1.785,248,5.283,249,1.898,251,1.98,254,1.785,256,0.974,258,1.785,260,2.081,263,4.226,265,1.263,266,2.925,267,3.342,268,1.785,269,1.152,270,0.834,271,3.752,272,2.744,273,3.342,274,1.785,275,4.275,276,3.662,277,2.744,278,3.283,279,2.873,280,1.785,281,2.85,282,3.593,283,2.654,284,3.342,285,2.744,286,1.785,287,3.741,288,1.785,289,2.613,290,1.785,291,1.785,292,1.785,293,1.19,294,1.396,295,3.342,296,1.785,297,1.785,298,1.785,299,1.396,300,4.049,301,1.562,302,1.785,303,2.85,304,1.785,305,1.785,306,1.785,307,2.744,308,1.785,309,1.785,310,1.785,311,1.785,312,1.785,313,1.785,314,1.785,315,1.785,316,1.396,317,1.562,318,2.744,319,1.785,320,3.342,321,3.342,322,1.785,323,1.785,324,1.785,325,1.785,326,1.785,327,2.744,328,1.263,329,1.785,330,2.744,331,2.744,332,2.401,333,1.785,334,1.785,335,3.342,336,1.785,337,1.785,338,1.785,339,1.785,340,2.744,341,3.149,342,1.785,343,1.785,344,2.744,345,2.744,346,1.785,347,1.785,348,1.785,349,1.785,350,1.785,351,2.744,352,2.744,353,1.152,354,1.785,355,3.342,356,2.401,357,2.145,358,2.744,359,1.785,360,1.396,361,1.785,362,1.785,386,1.152,387,2.124,388,2.124,389,3.264,390,2.124,391,2.124]],["title/components/CartSummaryComponent.html",[0,0.303,65,0.957]],["body/components/CartSummaryComponent.html",[0,0.473,1,0.893,2,1.636,3,0.268,4,0.233,5,1.114,6,1.293,7,1.293,8,1.293,9,0.233,11,1.2,12,2.195,13,2.347,15,1.763,17,1.763,19,0.466,22,0.712,26,0.76,28,0.606,29,0.029,30,0.705,31,0.636,32,0.606,37,0.415,38,0.268,41,0.268,42,0.133,48,1.2,51,1.293,52,1.763,53,1.312,54,0.893,55,2.155,56,1.293,57,1.293,58,0.962,59,1.293,60,0.893,61,1.293,62,0.893,63,1.558,64,1.293,65,1.603,66,1.293,67,0.893,68,1.293,69,0.893,70,0.658,71,1.763,72,0.893,73,0.897,74,1.293,75,0.893,76,0.829,77,1.2,78,0.829,79,1.114,80,1.293,81,0.019,82,0.019,125,0.897,172,1.763,260,2.155,353,1.786,363,3.757,368,2.421,371,2.421,376,3.773,379,2.95,380,2.95,382,3.773,392,3.757,393,2.767,394,4.488,395,5.107,396,4.488,397,3.291,398,3.291,399,4.488,400,4.488]],["title/components/CheckoutComponent.html",[0,0.303,67,0.889]],["body/components/CheckoutComponent.html",[0,0.406,1,0.677,2,1.344,3,0.203,4,0.176,5,0.845,6,0.98,7,0.98,8,0.98,9,0.176,11,0.909,12,2.093,13,2.231,15,1.448,17,1.448,19,0.353,20,1,22,0.539,26,0.916,28,0.679,29,0.029,30,0.754,31,0.766,32,0.679,35,0.629,36,0.909,37,0.448,38,0.203,41,0.203,42,0.101,48,1.598,51,0.98,52,1.448,53,1.077,54,0.677,55,1.902,56,0.98,57,0.98,58,0.729,59,0.98,60,0.677,61,0.98,62,0.677,63,0.861,64,0.98,65,0.729,66,0.98,67,1.314,68,0.98,69,0.677,70,1.256,71,1.448,72,0.677,73,0.736,74,0.98,75,0.677,76,0.629,77,0.909,78,0.629,79,0.845,80,0.98,81,0.016,82,0.016,101,1.484,125,0.736,128,1.344,129,1.159,172,2.03,180,4.07,182,2.097,185,2.097,196,2.097,199,3.098,207,3.182,211,2.627,216,1.248,217,3.071,218,2,353,1.354,372,2.711,373,2.711,385,3.098,401,2.097,402,4.383,403,3.686,404,4.383,405,3.182,406,4.383,407,3.686,408,1.835,409,2.802,410,3.686,411,3.686,412,2.495,413,2.495,414,2.495,415,2.495,416,2.495,417,2.495,418,3.686,419,2.495,420,2.495,421,2.495,422,4.841,423,3.686,424,2.495,425,3.686,426,3.686,427,3.686,428,3.686,429,6.12,430,6.12,431,4.07,432,4.07,433,4.841,434,4.07,435,4.07,436,3.686,437,3.686,438,3.686,439,3.686,440,3.686,441,3.686,442,2.495,443,2.495,444,2.495,445,2.495]],["title/directives/CounterDirective.html",[54,0.889,78,0.825]],["body/directives/CounterDirective.html",[0,0.331,3,0.291,4,0.252,5,1.998,9,0.252,11,1.302,12,1.605,19,0.506,20,1.287,22,0.772,26,0.901,28,0.873,29,0.028,30,0.61,31,0.754,32,0.873,35,0.9,36,1.302,37,0.331,38,0.291,41,0.291,42,0.215,43,1.209,44,1.123,53,1.043,54,1.445,77,1.302,78,1.194,79,2.054,81,0.02,82,0.02,129,1.674,249,1.919,260,1.403,269,1.937,270,1.403,279,2.888,281,2.36,289,2.347,293,1.728,294,2.347,303,1.778,328,2.819,446,2.627,447,4.741,448,4.741,449,3.57,450,4.961,451,4.766,452,3.57,453,4.474,454,3.57,455,3.985,456,4.766,457,3.57,458,3.985,459,4.474,460,3.001,461,3.001,462,3.001,463,2.347,464,3.001,465,3.985,466,3.001,467,3.001,468,3.001,469,2.347,470,3.001,471,3.001,472,4.474,473,3.001,474,2.627,475,2.123,476,3.985,477,3.001,478,2.347,479,3.001,480,2.123,481,2.347,482,3.001,483,2.627,484,3.001]],["title/classes/CounterDirectiveContext.html",[42,0.133,481,2.153]],["body/classes/CounterDirectiveContext.html",[0,0.351,3,0.309,4,0.268,5,1.855,9,0.268,12,1.283,19,0.537,22,0.82,26,0.835,28,0.698,29,0.028,30,0.488,31,0.698,32,0.698,37,0.351,38,0.309,41,0.309,42,0.222,43,1.283,44,1.192,53,1.108,54,1.488,78,0.955,79,1.855,81,0.021,82,0.021,125,0.985,129,1.724,172,1.938,249,1.855,260,1.489,269,2.057,270,1.489,279,2.973,281,2.455,289,2.491,293,1.798,294,2.491,303,1.887,328,2.932,386,2.057,446,2.789,450,4.607,451,4.145,453,4.145,455,3.187,456,4.145,458,3.187,459,4.607,460,3.187,461,3.187,462,3.187,463,2.491,464,3.187,465,4.145,466,3.187,467,3.187,468,3.187,469,2.491,470,3.187,471,3.187,472,4.607,473,3.187,474,2.789,475,2.254,476,4.145,477,3.187,478,2.491,479,3.187,480,2.254,481,3.241,482,3.187,483,2.789,484,3.187,485,5.48,486,3.791,487,3.791,488,3.791]],["title/injectables/Order.html",[70,0.655,201,0.603]],["body/injectables/Order.html",[3,0.223,4,0.194,9,0.194,19,0.388,20,1.072,22,0.854,26,1.045,28,0.505,29,0.029,30,0.651,31,0.863,32,0.505,35,0.691,36,1,37,0.366,38,0.223,41,0.223,42,0.16,63,1.441,70,1.012,81,0.017,82,0.017,125,0.789,127,2.645,128,2.149,129,1.854,172,2.613,201,0.728,202,1.078,207,3.042,211,2.143,217,2.752,220,3.328,238,3.991,249,1.337,256,2.124,270,1.078,276,2.349,316,1.803,353,1.488,368,2.018,431,3.891,432,3.891,435,3.891,478,1.803,480,1.631,489,2.306,490,4.629,491,4.629,492,3.95,493,2.743,494,2.743,495,2.743,496,2.743,497,2.743,498,2.743,499,2.743,500,2.743,501,2.743,502,2.743,503,2.743,504,2.743,505,2.743,506,2.743,507,2.743,508,2.743,509,2.743,510,2.743,511,2.743,512,2.743,513,2.306,514,2.743,515,2.743,516,2.906,517,1.803,518,2.743,519,2.743,520,2.306,521,2.306,522,2.743,523,2.743]],["title/injectables/OrderRepository.html",[201,0.603,409,1.777]],["body/injectables/OrderRepository.html",[3,0.251,4,0.218,9,0.218,19,0.436,20,1.164,22,0.666,26,1.029,28,0.983,29,0.029,30,0.686,31,0.822,32,0.983,35,1.413,36,1.798,37,0.519,38,0.251,41,0.251,42,0.125,43,1.043,44,1.826,50,2.894,70,1.298,81,0.018,82,0.018,125,0.857,128,1.564,129,1.349,201,0.79,202,1.211,211,2.327,216,1.452,217,2.551,218,1.672,223,2.267,224,2.448,226,3.155,229,2.934,233,1.833,234,2.267,249,1.67,251,1.534,256,1.414,409,2.327,524,2.591,525,4.933,526,3.606,527,4.484,528,5.334,529,3.155,530,4.289,531,4.289,532,3.606,533,3.082,534,3.082,535,3.082,536,3.155,537,3.082,538,4.289,539,3.082,540,3.082,541,2.267,542,1.672,543,2.591,544,3.082,545,3.082,546,3.082,547,4.289,548,3.082,549,3.082,550,3.082,551,3.082,552,4.289,553,4.289,554,4.289,555,4.289,556,3.082,557,3.082,558,3.082]],["title/components/OrderTableComponent.html",[0,0.303,69,0.889]],["body/components/OrderTableComponent.html",[0,0.506,1,1.022,2,1.789,3,0.306,4,0.266,5,1.274,6,1.479,7,1.479,8,1.479,9,0.266,11,1.372,12,2.237,13,2.396,15,1.929,17,1.929,29,0.028,30,0.702,37,0.348,38,0.306,41,0.306,42,0.152,48,1.372,51,1.479,52,1.929,53,1.434,54,1.022,55,2.274,56,1.479,57,1.479,58,1.1,59,1.479,60,1.022,61,1.479,62,1.022,63,1.146,64,1.479,65,1.1,66,1.479,67,1.022,68,1.479,69,1.571,70,1.296,71,1.929,72,1.022,73,0.981,74,1.479,75,1.022,76,0.948,77,1.372,78,0.948,79,1.274,80,1.479,81,0.021,82,0.021,110,2.769,559,3.164,560,2.769,561,4.258,562,4.591,563,4.126,564,4.126]],["title/classes/Product.html",[42,0.133,73,0.655]],["body/classes/Product.html",[3,0.296,4,0.257,9,0.257,19,0.515,22,1.161,26,1.033,28,0.67,29,0.028,30,0.8,31,0.863,32,1.197,41,0.296,42,0.194,73,1.073,81,0.02,82,0.02,125,1.073,127,2.774,172,2.608,195,2.162,249,2.136,256,2.724,257,4.367,270,1.428,341,3.626,386,1.972,478,2.389,565,3.056,566,3.626,567,6.097,568,3.635,569,3.635,570,3.635,571,3.635,572,3.635,573,3.635,574,3.635,575,3.056,576,3.635,577,3.635,578,3.635,579,3.635,580,3.635,581,3.635]],["title/components/ProductEditorComponent.html",[0,0.303,72,0.889]],["body/components/ProductEditorComponent.html",[0,0.506,1,1.022,2,1.789,3,0.306,4,0.266,5,1.274,6,1.479,7,1.479,8,1.479,9,0.266,11,1.372,12,2.237,13,2.396,15,1.929,17,1.929,29,0.028,30,0.702,37,0.348,38,0.306,41,0.306,42,0.152,48,1.372,51,1.479,52,1.929,53,1.434,54,1.022,55,2.274,56,1.479,57,1.479,58,1.1,59,1.479,60,1.022,61,1.479,62,1.022,63,1.146,64,1.479,65,1.1,66,1.479,67,1.022,68,1.479,69,1.022,70,0.752,71,1.929,72,1.571,73,1.305,74,1.479,75,1.022,76,0.948,77,1.372,78,0.948,79,1.274,80,1.479,81,0.021,82,0.021,108,2.769,564,4.126,582,2.769,583,3.164,584,5.788,585,5.462,586,4.908]],["title/modules/ProductModule.html",[83,1.777,587,1.948]],["body/modules/ProductModule.html",[3,0.291,4,0.252,9,0.252,24,2.784,29,0.029,37,0.589,38,0.291,41,0.291,42,0.144,63,1.417,70,1.212,81,0.02,82,0.02,83,2.572,85,2.175,86,2.175,91,2.572,92,1.514,93,1.638,96,3.498,99,3.165,120,2.123,125,0.713,212,3.001,224,2.84,270,2.091,303,1.778,316,2.347,386,1.937,409,3.291,463,2.347,475,2.123,517,3.116,521,3.001,542,2.572,587,3.953,588,3.001,589,3.001,590,3.02,591,3.57,592,4.741,593,3.001,594,3.57,595,3.57,596,3.57,597,3.57,598,3.57,599,3.57,600,3.57,601,3.985,602,3.57,603,3.001,604,3.57,605,3.001,606,3.001]],["title/injectables/ProductRepository.html",[201,0.603,590,1.631]],["body/injectables/ProductRepository.html",[3,0.199,4,0.173,9,0.173,19,0.346,20,0.985,22,0.936,26,0.966,28,0.943,29,0.029,30,0.658,31,0.786,32,0.943,35,1.437,36,1.322,37,0.443,38,0.199,41,0.199,42,0.175,43,0.827,44,1.687,49,2.549,73,1.268,81,0.015,82,0.018,93,1.12,125,0.725,127,1.538,128,1.578,129,1.361,195,3.044,201,0.668,202,0.959,216,1.465,223,1.796,224,2.198,226,2.668,229,2.157,234,1.796,238,2.849,249,1.816,251,1.806,256,2.349,260,0.959,265,1.452,269,2.348,276,3.19,281,2.549,282,2.844,283,1.452,284,2.844,287,1.796,293,1.578,299,1.605,301,2.668,303,1.216,328,2.157,332,1.796,405,2.384,475,2.157,480,2.157,517,1.605,520,3.049,542,1.968,543,2.052,566,3.303,590,2.155,607,2.052,608,4.303,609,2.668,610,4.027,611,3.627,612,2.574,613,3.049,614,3.627,615,2.668,616,2.441,617,2.441,618,3.627,619,2.441,620,3.627,621,2.441,622,2.052,623,2.441,624,2.441,625,2.441,626,2.441,627,3.627,628,3.627,629,2.441,630,2.441,631,2.441,632,2.441,633,2.441,634,2.441,635,2.441,636,2.441,637,2.441,638,2.441,639,2.441,640,3.627,641,2.441,642,2.441,643,2.441,644,1.796,645,2.441,646,2.441,647,2.441,648,2.441,649,2.441,650,2.441,651,2.441,652,2.052,653,2.668,654,3.627,655,4.328,656,2.441,657,2.441,658,3.638,659,2.052,660,2.441,661,2.441,662,2.441,663,2.441,664,3.627,665,3.627,666,2.441,667,3.627,668,2.441,669,2.441,670,2.441,671,2.052,672,2.441,673,2.441,674,2.441,675,2.441]],["title/components/ProductTableComponent.html",[0,0.303,75,0.889]],["body/components/ProductTableComponent.html",[0,0.447,1,0.805,2,1.523,3,0.242,4,0.21,5,1.005,6,1.166,7,1.166,8,1.166,9,0.21,11,1.082,12,2.159,13,2.306,15,1.641,17,1.641,19,0.42,20,1.134,22,0.642,26,0.819,28,0.769,29,0.029,30,0.758,31,0.591,32,0.769,35,1.052,36,1.082,37,0.447,38,0.242,41,0.242,42,0.12,43,1.005,48,1.082,51,1.166,52,1.641,53,1.221,54,0.805,55,2.062,56,1.166,57,1.166,58,0.867,59,1.166,60,0.805,61,1.166,62,0.805,63,0.976,64,1.166,65,0.867,66,1.166,67,0.805,68,1.166,69,0.805,70,0.593,71,1.641,72,0.805,73,1.283,74,1.166,75,1.424,76,0.748,77,1.082,78,0.748,79,1.005,80,1.166,81,0.018,82,0.018,106,3.86,216,1.005,249,1.636,256,2.218,260,1.641,293,1.523,341,2.484,379,2.745,380,2.745,405,2.745,408,2.183,475,2.484,560,2.183,561,3.073,562,4.064,563,3.511,566,2.484,582,3.86,590,2.612,609,3.073,612,3.12,615,3.073,652,3.511,658,3.511,676,2.967,677,2.967,678,2.967,679,2.494,680,2.494,681,2.967,682,2.967,683,4.177,684,4.177,685,4.177,686,4.177]],["title/injectables/RestDataSource.html",[201,0.603,224,1.503]],["body/injectables/RestDataSource.html",[3,0.202,4,0.175,9,0.175,19,0.351,20,0.995,22,0.535,26,1.046,28,1.055,29,0.029,30,0.737,31,0.843,32,1.055,35,1.499,37,0.477,38,0.202,41,0.202,42,0.1,43,0.838,44,1.372,49,1.825,50,1.988,70,1.206,73,1.206,81,0.016,82,0.016,125,0.732,127,2.524,159,3.081,176,2.696,201,0.675,202,0.973,216,2.044,224,1.682,229,3.822,233,1.472,238,1.472,249,1.825,256,1.682,265,1.472,293,0.902,483,3.21,526,3.081,527,4.054,529,2.696,532,3.081,536,2.696,541,1.821,593,2.081,609,2.696,612,2.868,613,3.081,615,2.696,622,3.081,687,1.821,688,4.363,689,4.363,690,4.823,691,3.665,692,3.665,693,2.475,694,4.823,695,2.475,696,3.21,697,3.665,698,2.475,699,2.081,700,2.475,701,2.475,702,2.475,703,3.665,704,2.475,705,2.475,706,2.475,707,2.475,708,3.665,709,2.475,710,3.665,711,2.475,712,2.475,713,2.475,714,3.665,715,2.475,716,1.821,717,1.821,718,2.081,719,2.475,720,2.475,721,2.475,722,2.475,723,3.665,724,4.363,725,2.475,726,2.475,727,2.475,728,2.475,729,2.475,730,3.665,731,2.475,732,5.391,733,2.475,734,2.475,735,2.475,736,2.475]],["title/injectables/StaticDataSource.html",[201,0.603,542,1.777]],["body/injectables/StaticDataSource.html",[3,0.165,4,0.222,9,0.143,19,0.287,20,0.854,26,0.653,28,0.373,29,0.027,30,0.26,31,0.445,32,0.373,35,0.972,37,0.436,38,0.165,41,0.165,42,0.156,44,1.213,49,1.921,50,1.098,70,0.997,73,1.356,81,0.013,82,0.013,125,0.628,128,0.738,129,0.637,195,2.966,201,0.373,202,0.795,216,1.065,229,3.095,233,1.204,251,3.182,265,1.204,270,0.795,279,1.706,281,1.566,283,1.204,293,2.374,360,1.33,386,1.098,463,1.33,474,1.489,516,2.314,529,2.314,536,2.314,541,2.314,542,2.093,566,4.027,575,1.701,603,1.701,605,1.701,606,1.701,612,2.966,653,1.489,696,1.489,737,1.701,738,2.024,739,2.024,740,3.145,741,6.513,742,3.145,743,6.391,744,3.145,745,4.701,746,3.145,747,3.657,748,3.145,749,3.657,750,3.145,751,3.657,752,3.145,753,4.35,754,3.145,755,3.657,756,3.145,757,3.657,758,3.145,759,3.657,760,3.145,761,4.35,762,3.145,763,4.35,764,3.145,765,4.35,766,3.145,767,4.35,768,3.145,769,4.35,770,2.024,771,2.024,772,1.701,773,3.145,774,2.024,775,2.024,776,2.024,777,2.024,778,2.024,779,2.024,780,1.701,781,2.024,782,2.024,783,2.024,784,2.024,785,2.024,786,2.024,787,2.024,788,2.024,789,2.024,790,2.024,791,2.024,792,2.024,793,2.024,794,2.024,795,2.024,796,1.701,797,2.024,798,2.024]],["title/components/StoreComponent.html",[0,0.303,76,0.825]],["body/components/StoreComponent.html",[0,0.326,1,0.478,2,1.027,3,0.143,4,0.124,5,0.596,6,0.692,7,0.692,8,0.692,9,0.124,11,0.642,12,1.939,13,2.056,14,1.852,15,1.107,17,1.107,19,0.499,20,0.765,22,0.381,25,2.934,26,0.955,28,0.811,29,0.029,30,0.659,31,0.726,32,0.811,35,1.332,36,1.468,37,0.408,38,0.143,39,0.747,41,0.143,42,0.071,43,0.596,44,0.886,48,1.284,49,2.852,51,0.692,52,1.107,53,0.824,54,0.478,55,1.582,56,0.692,57,0.692,58,0.515,59,0.692,60,0.478,61,0.692,62,0.478,63,1.317,64,0.692,65,0.515,66,0.692,67,0.478,68,0.692,69,0.478,70,0.352,71,1.107,72,0.478,73,1.084,74,0.692,75,0.478,76,1.015,77,0.642,78,0.444,79,0.596,80,0.692,81,0.012,82,0.012,92,0.747,125,0.563,127,0.747,128,1.284,129,1.385,172,2.077,195,1.676,216,1.591,221,2.073,238,2.095,249,2.029,251,1.754,257,1.295,260,1.107,266,1.295,269,1.529,270,0.692,276,2.395,278,1.295,279,0.955,281,2.34,282,3.243,283,1.676,284,1.157,293,1.606,299,1.852,303,2.758,356,1.295,357,1.852,360,1.157,371,1.295,372,2.073,373,2.073,379,1.852,380,1.852,405,2.647,408,1.295,469,1.157,480,1.047,513,1.48,566,1.676,590,2.005,601,1.48,608,3.703,610,2.369,612,1.676,644,1.295,653,2.073,671,1.48,679,1.48,680,1.48,699,2.369,745,2.073,747,3.385,751,2.369,755,2.369,772,2.962,780,2.369,799,1.48,800,3.523,801,2.818,802,4.027,803,4.699,804,4.027,805,2.818,806,2.818,807,2.818,808,2.818,809,3.523,810,2.818,811,2.818,812,1.761,813,2.818,814,1.761,815,2.818,816,2.818,817,1.761,818,2.818,819,2.818,820,1.761,821,1.761,822,1.761,823,1.761,824,1.761,825,1.761,826,1.761,827,1.761,828,1.761,829,2.818,830,2.818,831,1.761,832,3.523,833,3.523,834,3.523,835,5.186,836,2.818,837,5.64,838,1.761,839,1.761,840,3.523,841,1.761,842,1.761,843,1.761,844,1.761,845,1.761,846,1.761,847,1.761,848,2.818,849,1.761,850,1.761,851,1.761,852,1.761,853,1.761,854,1.761,855,3.523,856,1.761,857,1.761,858,1.761,859,1.761,860,2.369,861,1.761,862,2.818,863,2.818,864,1.761,865,1.761,866,3.523,867,2.818,868,1.761,869,1.761,870,1.761,871,1.761,872,1.761,873,1.761,874,1.761,875,1.761,876,1.761,877,1.761,878,1.761,879,1.761,880,1.761,881,1.761,882,1.761,883,1.761,884,1.761,885,1.761,886,2.818,887,2.818,888,2.818,889,2.818,890,2.818,891,2.369]],["title/injectables/StoreFirstGuard.html",[149,1.948,201,0.603]],["body/injectables/StoreFirstGuard.html",[3,0.316,4,0.274,9,0.274,19,0.55,20,1.359,22,0.84,25,3.691,26,0.939,28,0.923,29,0.029,30,0.644,31,0.709,32,0.923,35,0.978,37,0.513,38,0.316,39,1.647,41,0.316,42,0.157,43,1.314,44,1.744,46,3.264,76,1.262,81,0.021,82,0.021,111,2.552,115,2.978,125,1.001,128,1.415,129,1.221,149,2.978,157,2.856,177,2.856,201,0.923,202,1.526,205,4.21,206,4.923,207,3.644,208,4.923,210,4.21,211,2.717,216,1.695,217,2.978,218,3.008,270,1.526,892,3.264,893,5.544,894,5.008,895,3.883,896,3.883,897,3.883,898,3.883,899,3.883,900,3.883,901,3.883]],["title/modules/StoreModule.html",[83,1.777,138,1.948]],["body/modules/StoreModule.html",[3,0.278,4,0.241,9,0.241,29,0.029,37,0.59,38,0.278,39,1.447,41,0.278,42,0.138,62,1.758,65,1.75,67,1.758,76,1.631,78,1.508,81,0.02,82,0.02,85,1.565,86,2.11,91,2.494,92,1.447,93,1.565,95,3.382,99,2.734,100,3.865,101,2.028,102,3.382,120,2.734,138,3.991,141,3.865,142,2.509,143,2.242,153,3.865,154,2.242,155,2.867,156,2.867,157,2.509,168,3.865,392,2.509,587,3.749,902,2.867,903,2.867,904,2.867,905,3.41,906,3.41,907,3.41,908,3.41,909,3.41]],["title/coverage.html",[910,3.761]],["body/coverage.html",[0,0.588,1,0.912,9,0.237,10,2.825,24,1.542,29,0.029,31,0.476,42,0.209,54,0.912,58,0.982,60,0.912,62,0.912,63,0.785,65,0.982,67,0.912,69,0.912,70,0.671,72,0.912,73,0.671,75,0.912,76,0.847,78,0.847,81,0.019,82,0.019,90,1.823,94,2.472,106,2.472,108,2.472,110,2.472,111,2.209,121,2.825,149,1.998,154,2.209,169,2.825,201,1.158,203,2.825,219,2.825,224,1.542,239,3.349,260,2.659,263,2.209,293,1.225,363,3.349,364,2.825,392,2.472,393,2.825,401,2.825,409,1.823,446,3.349,481,2.209,489,2.825,524,2.825,542,1.823,559,2.825,560,3.349,561,2.472,565,2.825,582,3.349,583,2.825,590,1.673,607,2.825,687,3.797,716,2.472,717,2.472,737,2.825,799,2.825,892,2.825,910,2.825,911,3.36,912,3.36,913,3.36,914,5.162,915,5.782,916,5.782,917,3.36,918,5.961,919,3.36,920,4.552,921,5.532,922,3.36,923,3.36,924,3.36]],["title/dependencies.html",[86,1.808,925,2.012]],["body/dependencies.html",[29,0.029,38,0.378,39,1.967,81,0.024,82,0.024,86,2.128,98,3.899,101,2.758,140,3.899,142,4.116,143,3.678,233,2.758,926,4.638,927,6.621,928,4.638,929,4.638,930,4.638,931,4.638,932,4.638,933,4.638,934,4.638,935,4.638,936,4.638,937,4.638,938,4.638]],["title/index.html",[19,0.387,796,2.299,939,2.734]],["body/index.html",[0,0.519,4,0.281,29,0.022,30,0.511,81,0.022,82,0.022,93,1.821,130,3.337,198,3.337,293,1.447,434,3.337,469,2.609,516,2.92,517,3.682,644,2.92,659,3.337,835,3.337,860,3.337,891,3.337,925,2.92,940,5.08,941,3.97,942,5.602,943,3.337,944,3.97,945,3.97,946,5.08,947,6.104,948,6.348,949,3.97,950,3.97,951,3.97,952,3.97,953,3.97,954,3.97,955,3.97,956,5.602,957,5.602,958,3.97,959,5.906,960,3.97,961,3.97,962,3.97,963,5.08,964,5.08,965,5.906,966,3.97,967,5.08,968,5.08,969,3.97,970,6.244,971,3.97,972,3.97,973,3.97,974,5.08,975,3.97,976,3.97,977,3.97,978,3.97,979,3.97,980,5.602,981,3.97,982,3.97,983,2.92,984,3.97]],["title/modules.html",[85,2.053]],["body/modules.html",[29,0.025,81,0.025,82,0.025,84,3.216,85,2.245,132,3.216,137,2.91,138,2.91,143,4.259,587,2.91,985,6.48,986,6.48,987,6.48]],["title/overview.html",[983,3.291]],["body/overview.html",[1,1.369,2,1.171,24,2.314,29,0.029,54,0.872,58,1.76,60,1.369,62,1.635,63,1.178,65,1.474,67,1.635,69,1.369,70,1.008,72,1.369,75,1.369,76,1.517,78,1.27,81,0.019,82,0.019,84,4.27,85,1.474,86,2.025,87,2.7,88,2.7,89,2.7,90,2.736,91,2.394,92,1.362,93,1.474,132,4.091,133,2.7,134,2.7,135,2.7,136,2.7,137,3.384,138,3.957,147,2.7,148,2.7,149,2.998,152,2.111,202,1.262,224,2.314,251,1.599,386,1.743,409,2.736,587,3.902,588,2.7,589,2.7,590,2.511,745,2.363,749,3.71,757,2.7,759,2.7,902,2.7,903,2.7,904,2.7,983,2.363]],["title/properties.html",[125,0.787,925,2.012]],["body/properties.html",[29,0.027,81,0.026,82,0.026,125,1.048,943,4.41,988,5.247]],["title/routes.html",[152,2.94]],["body/routes.html",[29,0.026,81,0.026,82,0.026,152,3.483]],["title/miscellaneous/variables.html",[989,2.299,990,3.313]],["body/miscellaneous/variables.html",[0,0.586,1,1.134,19,0.591,29,0.029,31,0.743,33,3.12,49,2.612,50,2.266,60,1.134,69,1.134,72,1.424,75,1.134,81,0.022,82,0.022,90,2.266,94,3.073,111,3.448,112,3.511,113,4.777,114,3.511,115,2.484,116,3.511,117,3.511,118,3.511,119,3.86,127,1.772,128,2.091,129,1.804,249,1.414,687,3.073,696,3.073,716,3.86,717,3.86,718,3.511,989,3.511,990,3.511,991,5.246,992,4.177]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":260,"title":{},"body":{"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":988,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["0;//if",{"_index":362,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["1",{"_index":251,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"overview.html":{}}}],["1);//if",{"_index":312,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["10",{"_index":759,"title":{},"body":{"injectables/StaticDataSource.html":{},"overview.html":{}}}],["100",{"_index":741,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["11",{"_index":761,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["12",{"_index":763,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["13",{"_index":765,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["14",{"_index":767,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["15",{"_index":769,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["15.0.0",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["15.0.4",{"_index":944,"title":{},"body":{"index.html":{}}}],["2",{"_index":743,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["2.3.0",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["2px",{"_index":440,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["3",{"_index":745,"title":{},"body":{"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"overview.html":{}}}],["3500",{"_index":718,"title":{},"body":{"injectables/RestDataSource.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":747,"title":{},"body":{"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["4.4.1",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":749,"title":{},"body":{"injectables/StaticDataSource.html":{},"overview.html":{}}}],["5.12.1",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":751,"title":{},"body":{"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["6bc502",{"_index":444,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["7",{"_index":753,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["7.5.0",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":755,"title":{},"body":{"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["9",{"_index":757,"title":{},"body":{"injectables/StaticDataSource.html":{},"overview.html":{}}}],["accepts",{"_index":576,"title":{},"body":{"classes/Product.html":{}}}],["access",{"_index":780,"title":{},"body":{"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["accessed",{"_index":853,"title":{},"body":{"components/StoreComponent.html":{}}}],["accessors",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"classes/CartLine.html":{},"components/StoreComponent.html":{}}}],["activatedroutesnapshot",{"_index":206,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/StoreFirstGuard.html":{}}}],["actual_component",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["add",{"_index":891,"title":{},"body":{"components/StoreComponent.html":{},"index.html":{}}}],["added",{"_index":296,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["adding",{"_index":345,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["addline",{"_index":243,"title":{},"body":{"injectables/Cart.html":{}}}],["addline(product",{"_index":247,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["addproducttocart",{"_index":805,"title":{},"body":{"components/StoreComponent.html":{}}}],["addproducttocart(product",{"_index":811,"title":{},"body":{"components/StoreComponent.html":{}}}],["address",{"_index":431,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/Order.html":{}}}],["admin",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/StoreComponent.html":{}}}],["admin'},{'name",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["admin.component.css",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.component",{"_index":103,"title":{},"body":{"modules/AdminModule.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["adminmodule",{"_index":84,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["allows",{"_index":653,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["alphabetically",{"_index":648,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["angular",{"_index":517,"title":{},"body":{"injectables/Order.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"index.html":{}}}],["angular,this",{"_index":778,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["angular/animations",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":98,"title":{},"body":{"modules/AdminModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":593,"title":{},"body":{"modules/ProductModule.html":{},"injectables/RestDataSource.html":{}}}],["angular/compiler",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":101,"title":{},"body":{"modules/AdminModule.html":{},"components/AuthComponent.html":{},"components/CheckoutComponent.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["another",{"_index":512,"title":{},"body":{"injectables/Order.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["app.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":58,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":516,"title":{},"body":{"injectables/Order.html":{},"injectables/StaticDataSource.html":{},"index.html":{}}}],["appmodule",{"_index":132,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":137,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":278,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"components/StoreComponent.html":{}}}],["arguments",{"_index":295,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["arguments.if",{"_index":268,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["array",{"_index":282,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["array.indexof(c",{"_index":635,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["arrays",{"_index":776,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["artifacts",{"_index":960,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":856,"title":{},"body":{"components/StoreComponent.html":{}}}],["assignment",{"_index":324,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["attribute",{"_index":460,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["auth",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["auth.component.css",{"_index":170,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":171,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.guard",{"_index":104,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth/auth.component",{"_index":105,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth_token",{"_index":688,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["authcomponent",{"_index":60,"title":{"components/AuthComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":176,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/RestDataSource.html":{}}}],["authenticate(form",{"_index":179,"title":{},"body":{"components/AuthComponent.html":{}}}],["authenticate(user",{"_index":697,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["authenticate(username",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticate(username:string",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":187,"title":{},"body":{"components/AuthComponent.html":{}}}],["authguard",{"_index":90,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AdminModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":719,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["authservice",{"_index":24,"title":{"injectables/AuthService.html":{}},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/ProductModule.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":952,"title":{},"body":{"index.html":{}}}],["available",{"_index":873,"title":{},"body":{"components/StoreComponent.html":{}}}],["back",{"_index":199,"title":{},"body":{"components/AuthComponent.html":{},"components/CheckoutComponent.html":{}}}],["based",{"_index":299,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["baseurl",{"_index":689,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["basic",{"_index":372,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CheckoutComponent.html":{},"components/StoreComponent.html":{}}}],["bearer",{"_index":720,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["being",{"_index":336,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["between",{"_index":861,"title":{},"body":{"components/StoreComponent.html":{}}}],["boolean",{"_index":211,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/StoreFirstGuard.html":{}}}],["bootstrap",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":439,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["both",{"_index":342,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["bound",{"_index":461,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["browse",{"_index":987,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["build",{"_index":959,"title":{},"body":{"index.html":{}}}],["calculated",{"_index":842,"title":{},"body":{"components/StoreComponent.html":{}}}],["calculates",{"_index":356,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"components/StoreComponent.html":{}}}],["calculation",{"_index":874,"title":{},"body":{"components/StoreComponent.html":{}}}],["call",{"_index":828,"title":{},"body":{"components/StoreComponent.html":{}}}],["callback",{"_index":330,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["called",{"_index":772,"title":{},"body":{"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["calling",{"_index":774,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["calls",{"_index":671,"title":{},"body":{"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["canactivate",{"_index":115,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/StoreFirstGuard.html":{},"miscellaneous/variables.html":{}}}],["canactivate(route",{"_index":205,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/StoreFirstGuard.html":{}}}],["capabilities",{"_index":978,"title":{},"body":{"index.html":{}}}],["cart",{"_index":63,"title":{"injectables/Cart.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"injectables/Order.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cart.cartprice",{"_index":382,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{}}}],["cart.itemcount",{"_index":399,"title":{},"body":{"components/CartSummaryComponent.html":{}}}],["cart.model",{"_index":502,"title":{},"body":{"injectables/Order.html":{}}}],["cartdetailcomponent",{"_index":62,"title":{"components/CartDetailComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["cartline",{"_index":263,"title":{"classes/CartLine.html":{}},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"coverage.html":{}}}],["cartline(product",{"_index":291,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["cartprice",{"_index":240,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["cartsummarycomponent",{"_index":65,"title":{"components/CartSummaryComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["cat",{"_index":887,"title":{},"body":{"components/StoreComponent.html":{}}}],["categories",{"_index":608,"title":{},"body":{"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["category",{"_index":566,"title":{},"body":{"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["category.sort",{"_index":646,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["change",{"_index":469,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"components/StoreComponent.html":{},"index.html":{}}}],["changecategory",{"_index":806,"title":{},"body":{"components/StoreComponent.html":{}}}],["changecategory(newcategory",{"_index":813,"title":{},"body":{"components/StoreComponent.html":{}}}],["changepage",{"_index":807,"title":{},"body":{"components/StoreComponent.html":{}}}],["changepage(newpage",{"_index":816,"title":{},"body":{"components/StoreComponent.html":{}}}],["changepagesize",{"_index":808,"title":{},"body":{"components/StoreComponent.html":{}}}],["changepagesize(newsize",{"_index":819,"title":{},"body":{"components/StoreComponent.html":{}}}],["changes",{"_index":458,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["changing",{"_index":865,"title":{},"body":{"components/StoreComponent.html":{}}}],["check",{"_index":982,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":385,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CheckoutComponent.html":{}}}],["checkout'},{'name",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["checkout.component.css",{"_index":402,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.component.html",{"_index":403,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutcomponent",{"_index":67,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["checks",{"_index":339,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["children",{"_index":116,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["choice",{"_index":973,"title":{},"body":{"index.html":{}}}],["city",{"_index":432,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/Order.html":{}}}],["class",{"_index":42,"title":{"classes/CartLine.html":{},"classes/CounterDirectiveContext.html":{},"classes/Product.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["classes",{"_index":386,"title":{},"body":{"classes/CartLine.html":{},"classes/CounterDirectiveContext.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/StaticDataSource.html":{},"overview.html":{}}}],["clear",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/Order.html":{}}}],["clears",{"_index":471,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["cli",{"_index":942,"title":{},"body":{"index.html":{}}}],["cluster_adminmodule",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_providers",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":588,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":589,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_storemodule",{"_index":902,"title":{},"body":{"modules/StoreModule.html":{},"overview.html":{}}}],["cluster_storemodule_declarations",{"_index":904,"title":{},"body":{"modules/StoreModule.html":{},"overview.html":{}}}],["cluster_storemodule_exports",{"_index":903,"title":{},"body":{"modules/StoreModule.html":{},"overview.html":{}}}],["cluster_storemodule_imports",{"_index":905,"title":{},"body":{"modules/StoreModule.html":{}}}],["code",{"_index":434,"title":{},"body":{"components/CheckoutComponent.html":{},"index.html":{}}}],["coming",{"_index":793,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["command",{"_index":974,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":97,"title":{},"body":{"modules/AdminModule.html":{}}}],["complete",{"_index":436,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"overview.html":{}}}],["components/cart",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/StoreModule.html":{}}}],["components/checkout/checkout.component",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/StoreModule.html":{}}}],["components/store/store.component",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{}}}],["computed",{"_index":850,"title":{},"body":{"components/StoreComponent.html":{}}}],["conditions",{"_index":343,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["console.log(json.stringify(order",{"_index":783,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["const",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/RestDataSource.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["constructor($implicit",{"_index":486,"title":{},"body":{"classes/CounterDirectiveContext.html":{}}}],["constructor(auth",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{}}}],["constructor(cart",{"_index":368,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"injectables/Order.html":{}}}],["constructor(container",{"_index":449,"title":{},"body":{"directives/CounterDirective.html":{}}}],["constructor(datasource",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{}}}],["constructor(http",{"_index":693,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["constructor(id",{"_index":568,"title":{},"body":{"classes/Product.html":{}}}],["constructor(private",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["constructor(product",{"_index":387,"title":{},"body":{"classes/CartLine.html":{}}}],["constructor(public",{"_index":353,"title":{},"body":{"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"injectables/Order.html":{}}}],["constructor(repository",{"_index":408,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["constructor(router",{"_index":177,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/StoreFirstGuard.html":{}}}],["container",{"_index":453,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["containing",{"_index":845,"title":{},"body":{"components/StoreComponent.html":{}}}],["context",{"_index":482,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["continue",{"_index":383,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["correspond",{"_index":577,"title":{},"body":{"classes/Product.html":{}}}],["counter",{"_index":465,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["counterdirective",{"_index":78,"title":{"directives/CounterDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["counterdirectivecontext",{"_index":481,"title":{"classes/CounterDirectiveContext.html":{}},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"coverage.html":{}}}],["counterof",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["country",{"_index":435,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/Order.html":{}}}],["coverage",{"_index":910,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":475,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{}}}],["created",{"_index":294,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["createembeddedview",{"_index":477,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["creates",{"_index":518,"title":{},"body":{"injectables/Order.html":{}}}],["currency",{"_index":379,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["current",{"_index":335,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["currently",{"_index":833,"title":{},"body":{"components/StoreComponent.html":{}}}],["data",{"_index":195,"title":{},"body":{"components/AuthComponent.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["data.map(p",{"_index":629,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["datasource",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{}}}],["datasource.getproducts().subscribe(data",{"_index":625,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["declarations",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["decorator",{"_index":463,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"modules/ProductModule.html":{},"injectables/StaticDataSource.html":{}}}],["default",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"components/CheckoutComponent.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["defines",{"_index":575,"title":{},"body":{"classes/Product.html":{},"injectables/StaticDataSource.html":{}}}],["delete",{"_index":686,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["deleteorder",{"_index":526,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/RestDataSource.html":{}}}],["deleteorder(id",{"_index":532,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/RestDataSource.html":{}}}],["deleteproduct",{"_index":609,"title":{},"body":{"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{}}}],["deleteproduct(id",{"_index":615,"title":{},"body":{"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProductModule.html":{},"modules/StoreModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":605,"title":{},"body":{"modules/ProductModule.html":{},"injectables/StaticDataSource.html":{}}}],["description",{"_index":567,"title":{},"body":{"classes/Product.html":{}}}],["detail",{"_index":365,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["detail'},{'name",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["detail.component",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/StoreModule.html":{}}}],["detail.component.css",{"_index":366,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["detail.component.html",{"_index":367,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["detail.component.ts",{"_index":364,"title":{},"body":{"components/CartDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:10",{"_index":370,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["detail.component.ts:9",{"_index":369,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["detail/cart",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CartDetailComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["detect",{"_index":519,"title":{},"body":{"injectables/Order.html":{}}}],["dev",{"_index":950,"title":{},"body":{"index.html":{}}}],["development",{"_index":945,"title":{},"body":{"index.html":{}}}],["directive",{"_index":54,"title":{"directives/CounterDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["directives/counter.directive",{"_index":908,"title":{},"body":{"modules/StoreModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":958,"title":{},"body":{"index.html":{}}}],["directory",{"_index":962,"title":{},"body":{"index.html":{}}}],["dirty.ng",{"_index":438,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["display",{"_index":836,"title":{},"body":{"components/StoreComponent.html":{}}}],["displayed",{"_index":866,"title":{},"body":{"components/StoreComponent.html":{}}}],["dist",{"_index":961,"title":{},"body":{"index.html":{}}}],["dividing",{"_index":876,"title":{},"body":{"components/StoreComponent.html":{}}}],["documentation",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["done",{"_index":875,"title":{},"body":{"components/StoreComponent.html":{}}}],["dummy",{"_index":773,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["duplicate",{"_index":638,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["dynamic",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":851,"title":{},"body":{"components/StoreComponent.html":{}}}],["e2e",{"_index":971,"title":{},"body":{"index.html":{}}}],["each",{"_index":328,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/ProductRepository.html":{}}}],["edit",{"_index":685,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["editor",{"_index":584,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor'},{'name",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["editor.component",{"_index":109,"title":{},"body":{"modules/AdminModule.html":{}}}],["editor.component.css",{"_index":585,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.html",{"_index":586,"title":{},"body":{"components/ProductEditorComponent.html":{}}}],["editor.component.ts",{"_index":583,"title":{},"body":{"components/ProductEditorComponent.html":{},"coverage.html":{}}}],["editor/product",{"_index":108,"title":{},"body":{"modules/AdminModule.html":{},"components/ProductEditorComponent.html":{},"coverage.html":{}}}],["effect",{"_index":869,"title":{},"body":{"components/StoreComponent.html":{}}}],["element",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["elements",{"_index":846,"title":{},"body":{"components/StoreComponent.html":{}}}],["elevate",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["elsewhere",{"_index":523,"title":{},"body":{"injectables/Order.html":{}}}],["embedded",{"_index":476,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["emits",{"_index":626,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["empty",{"_index":376,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{}}}],["end",{"_index":970,"title":{},"body":{"index.html":{}}}],["ensuring",{"_index":868,"title":{},"body":{"components/StoreComponent.html":{}}}],["enter",{"_index":430,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["errormessage",{"_index":173,"title":{},"body":{"components/AuthComponent.html":{}}}],["execute",{"_index":967,"title":{},"body":{"index.html":{}}}],["existing",{"_index":275,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["exists",{"_index":340,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["exits",{"_index":306,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["export",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{}}}],["exports",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/StoreModule.html":{}}}],["extracting",{"_index":632,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["failed",{"_index":194,"title":{},"body":{"components/AuthComponent.html":{}}}],["false",{"_index":217,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CheckoutComponent.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/StoreFirstGuard.html":{}}}],["feature",{"_index":601,"title":{},"body":{"modules/ProductModule.html":{},"components/StoreComponent.html":{}}}],["feed",{"_index":789,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["ff0000",{"_index":442,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["files",{"_index":954,"title":{},"body":{"index.html":{}}}],["filter",{"_index":650,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["filter((c",{"_index":633,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["filter(p",{"_index":651,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["filters",{"_index":637,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["find",{"_index":280,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["findindex",{"_index":310,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["findindex(o",{"_index":554,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["findindex(p",{"_index":665,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["first",{"_index":644,"title":{},"body":{"injectables/ProductRepository.html":{},"components/StoreComponent.html":{},"index.html":{}}}],["firstnavigation",{"_index":893,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["foreach",{"_index":329,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["form",{"_index":182,"title":{},"body":{"components/AuthComponent.html":{},"components/CheckoutComponent.html":{}}}],["formsmodule",{"_index":100,"title":{},"body":{"modules/AdminModule.html":{},"modules/StoreModule.html":{}}}],["fortawesome/fontawesome",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":287,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/ProductRepository.html":{}}}],["free",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["from([order",{"_index":784,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["from([this.products",{"_index":782,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["function",{"_index":331,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["functionality",{"_index":781,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["further",{"_index":979,"title":{},"body":{"index.html":{}}}],["generate",{"_index":956,"title":{},"body":{"index.html":{}}}],["generated",{"_index":941,"title":{},"body":{"index.html":{}}}],["getauthenticated",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcategories",{"_index":610,"title":{},"body":{"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["getlinetotal",{"_index":390,"title":{},"body":{"classes/CartLine.html":{}}}],["getoptions",{"_index":690,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["getorders",{"_index":527,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/RestDataSource.html":{}}}],["getpagecount",{"_index":826,"title":{},"body":{"components/StoreComponent.html":{}}}],["getproduct",{"_index":611,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["getproduct(id",{"_index":618,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["getproducts",{"_index":612,"title":{},"body":{"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["getproducts(category",{"_index":620,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["getproducts(this.selectedcategory).length",{"_index":882,"title":{},"body":{"components/StoreComponent.html":{}}}],["getter",{"_index":849,"title":{},"body":{"components/StoreComponent.html":{}}}],["getting",{"_index":796,"title":{"index.html":{}},"body":{"injectables/StaticDataSource.html":{}}}],["go",{"_index":198,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["going",{"_index":788,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["goods",{"_index":426,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["govern",{"_index":900,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["guards",{"_index":899,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["handling",{"_index":771,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["happens",{"_index":305,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["headers",{"_index":703,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["help",{"_index":980,"title":{},"body":{"index.html":{}}}],["home",{"_index":886,"title":{},"body":{"components/StoreComponent.html":{}}}],["html",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["http",{"_index":696,"title":{},"body":{"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":951,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":694,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["httpclientmodule",{"_index":592,"title":{},"body":{"modules/ProductModule.html":{}}}],["httpheaders",{"_index":714,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["id",{"_index":256,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{}}}],["id);//finds",{"_index":309,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["identifier",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["if(!this.auth.authenticated",{"_index":214,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["if(!this.loaded",{"_index":548,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["if(form.valid",{"_index":185,"title":{},"body":{"components/AuthComponent.html":{},"components/CheckoutComponent.html":{}}}],["if(product.id",{"_index":661,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["if(response",{"_index":191,"title":{},"body":{"components/AuthComponent.html":{}}}],["if(this.firstnavigation",{"_index":896,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["immediately",{"_index":870,"title":{},"body":{"components/StoreComponent.html":{}}}],["implemented",{"_index":467,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["implements",{"_index":976,"title":{},"body":{"index.html":{}}}],["implicit",{"_index":485,"title":{},"body":{"classes/CounterDirectiveContext.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{}}}],["import(\\\"./admin/admin.module",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":120,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProductModule.html":{},"modules/StoreModule.html":{}}}],["including",{"_index":843,"title":{},"body":{"components/StoreComponent.html":{}}}],["increased",{"_index":288,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"miscellaneous/variables.html":{}}}],["index).sort",{"_index":636,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["index,array",{"_index":634,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["indexof",{"_index":642,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{}}}],["injectable",{"_index":201,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"injectables/StoreFirstGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"injectables/StoreFirstGuard.html":{},"coverage.html":{}}}],["injectable()//this",{"_index":777,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["injectables",{"_index":202,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"injectables/StoreFirstGuard.html":{},"overview.html":{}}}],["injection",{"_index":606,"title":{},"body":{"modules/ProductModule.html":{},"injectables/StaticDataSource.html":{}}}],["input",{"_index":459,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["input(\"counterof",{"_index":464,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["input.ng",{"_index":437,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inputs",{"_index":448,"title":{},"body":{"directives/CounterDirective.html":{}}}],["inside",{"_index":338,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["inspect",{"_index":668,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["instance",{"_index":480,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["integer",{"_index":880,"title":{},"body":{"components/StoreComponent.html":{}}}],["intimates",{"_index":373,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CheckoutComponent.html":{},"components/StoreComponent.html":{}}}],["invalid",{"_index":196,"title":{},"body":{"components/AuthComponent.html":{},"components/CheckoutComponent.html":{}}}],["invoke",{"_index":670,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["item",{"_index":354,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["item(s",{"_index":400,"title":{},"body":{"components/CartSummaryComponent.html":{}}}],["itemcount",{"_index":241,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["iterates",{"_index":326,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["iterating",{"_index":346,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["iteration",{"_index":479,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["karma",{"_index":969,"title":{},"body":{"index.html":{}}}],["keep",{"_index":639,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["keeps",{"_index":643,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["know",{"_index":792,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["ksh.\":\"symbol\":\"1.0",{"_index":380,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["l",{"_index":333,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["l.product",{"_index":350,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["l.product.price",{"_index":351,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["l.quantity",{"_index":352,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["legend",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["line",{"_index":271,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["line.linetotal",{"_index":381,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["line.product.id",{"_index":273,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["line.product.name",{"_index":377,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["line.product.price",{"_index":378,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["line.quantity",{"_index":285,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["lines",{"_index":242,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["linetotal",{"_index":355,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["loadchildren",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":525,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["loadorders",{"_index":528,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["log",{"_index":200,"title":{},"body":{"components/AuthComponent.html":{}}}],["login",{"_index":725,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["logout",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{}}}],["loops",{"_index":473,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["m.adminmodule",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":114,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":794,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["map",{"_index":715,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["match",{"_index":649,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["matches",{"_index":277,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["matching",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.repository",{"_index":881,"title":{},"body":{"components/StoreComponent.html":{}}}],["means",{"_index":513,"title":{},"body":{"injectables/Order.html":{},"components/StoreComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["method",{"_index":281,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/ProductRepository.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["methods",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["miscellaneous",{"_index":989,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/auth.service",{"_index":212,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/ProductModule.html":{}}}],["models/cart.model",{"_index":594,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/order.model",{"_index":595,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/order.repository",{"_index":596,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/product.repository",{"_index":597,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/rest.datasource",{"_index":598,"title":{},"body":{"modules/ProductModule.html":{}}}],["models/static.datasource",{"_index":599,"title":{},"body":{"modules/ProductModule.html":{}}}],["module",{"_index":83,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProductModule.html":{},"modules/StoreModule.html":{}},"body":{"modules/ProductModule.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProductModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/store.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":981,"title":{},"body":{"index.html":{}}}],["multiplying",{"_index":359,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["name",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"index.html":{}}}],["name:user",{"_index":726,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["named",{"_index":847,"title":{},"body":{"components/StoreComponent.html":{}}}],["names",{"_index":631,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["navigate",{"_index":860,"title":{},"body":{"components/StoreComponent.html":{},"index.html":{}}}],["nearest",{"_index":879,"title":{},"body":{"components/StoreComponent.html":{}}}],["need",{"_index":975,"title":{},"body":{"index.html":{}}}],["needs",{"_index":667,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["new",{"_index":293,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"coverage.html":{},"index.html":{}}}],["newcategory",{"_index":815,"title":{},"body":{"components/StoreComponent.html":{}}}],["newpage",{"_index":818,"title":{},"body":{"components/StoreComponent.html":{}}}],["newsize",{"_index":821,"title":{},"body":{"components/StoreComponent.html":{}}}],["ng",{"_index":948,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":180,"title":{},"body":{"components/AuthComponent.html":{},"components/CheckoutComponent.html":{}}}],["ngmodule",{"_index":99,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProductModule.html":{},"modules/StoreModule.html":{}}}],["ngonchanges",{"_index":447,"title":{},"body":{"directives/CounterDirective.html":{}}}],["ngonchanges\"is",{"_index":466,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["ngonchanges(changes",{"_index":455,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["nothing",{"_index":304,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["null",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/Order.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"components/StoreComponent.html":{}}}],["number",{"_index":249,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"components/StoreComponent.html":{},"miscellaneous/variables.html":{}}}],["number(newsize",{"_index":871,"title":{},"body":{"components/StoreComponent.html":{}}}],["number(quantity",{"_index":302,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["o.id",{"_index":555,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["object",{"_index":276,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/Order.html":{},"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["objects",{"_index":283,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/ProductRepository.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["observable",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{}}}],["occurrence",{"_index":645,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["occurs",{"_index":470,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["one",{"_index":316,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/Order.html":{},"modules/ProductModule.html":{}}}],["ones",{"_index":641,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["operator",{"_index":325,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["optional",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["order",{"_index":70,"title":{"injectables/Order.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order.id",{"_index":556,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["order.id),1",{"_index":558,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["order.model",{"_index":541,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{}}}],["orderrepository",{"_index":409,"title":{"injectables/OrderRepository.html":{}},"body":{"components/CheckoutComponent.html":{},"injectables/OrderRepository.html":{},"modules/ProductModule.html":{},"coverage.html":{},"overview.html":{}}}],["orders",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/OrderRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"miscellaneous/variables.html":{}}}],["ordersent",{"_index":404,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["ordertablecomponent",{"_index":69,"title":{"components/OrderTableComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":656,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["out",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"modules/StoreModule.html":{},"index.html":{},"overview.html":{}}}],["over",{"_index":327,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["overview",{"_index":983,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.category",{"_index":652,"title":{},"body":{"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{}}}],["p.category)//creates",{"_index":630,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["p.id",{"_index":658,"title":{},"body":{"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{}}}],["p.name",{"_index":683,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["p.price",{"_index":684,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["package",{"_index":925,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":835,"title":{},"body":{"components/StoreComponent.html":{},"index.html":{}}}],["pagecount",{"_index":809,"title":{},"body":{"components/StoreComponent.html":{}}}],["pageindex",{"_index":829,"title":{},"body":{"components/StoreComponent.html":{}}}],["pages",{"_index":862,"title":{},"body":{"components/StoreComponent.html":{}}}],["pagination",{"_index":859,"title":{},"body":{"components/StoreComponent.html":{}}}],["parameter",{"_index":520,"title":{},"body":{"injectables/Order.html":{},"injectables/ProductRepository.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["parent",{"_index":462,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["pass",{"_index":483,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/RestDataSource.html":{}}}],["passed",{"_index":289,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["password",{"_index":174,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["password:pass",{"_index":727,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["path",{"_index":113,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["path:\"cart",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"checkout",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:\"store",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":837,"title":{},"body":{"components/StoreComponent.html":{}}}],["perform",{"_index":186,"title":{},"body":{"components/AuthComponent.html":{}}}],["pipe(map(response",{"_index":728,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["placing",{"_index":423,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["platform",{"_index":972,"title":{},"body":{"index.html":{}}}],["please",{"_index":429,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["populate",{"_index":579,"title":{},"body":{"classes/Product.html":{}}}],["port",{"_index":717,"title":{},"body":{"injectables/RestDataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":428,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["prepare",{"_index":785,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["price",{"_index":341,"title":{},"body":{"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"classes/Product.html":{},"components/ProductTableComponent.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["processed",{"_index":337,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["produces",{"_index":775,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product",{"_index":73,"title":{"classes/Product.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"coverage.html":{}}}],["product(1",{"_index":740,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(10",{"_index":758,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(11",{"_index":760,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(12",{"_index":762,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(13",{"_index":764,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(14",{"_index":766,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(15",{"_index":768,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(2",{"_index":742,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(3",{"_index":744,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(4",{"_index":746,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(5",{"_index":748,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(6",{"_index":750,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(7",{"_index":752,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(8",{"_index":754,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product(9",{"_index":756,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["product.description",{"_index":890,"title":{},"body":{"components/StoreComponent.html":{}}}],["product.id",{"_index":301,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/ProductRepository.html":{}}}],["product.id);//look",{"_index":274,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["product.model",{"_index":265,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{}}}],["product.module",{"_index":909,"title":{},"body":{"modules/StoreModule.html":{}}}],["product.name",{"_index":888,"title":{},"body":{"components/StoreComponent.html":{}}}],["product.price",{"_index":889,"title":{},"body":{"components/StoreComponent.html":{}}}],["producteditorcomponent",{"_index":72,"title":{"components/ProductEditorComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["productmodule",{"_index":587,"title":{"modules/ProductModule.html":{}},"body":{"modules/ProductModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["productrepository",{"_index":590,"title":{"injectables/ProductRepository.html":{}},"body":{"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{}}}],["products",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"miscellaneous/variables.html":{}}}],["products/:mode",{"_index":118,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["products/:mode/:id",{"_index":117,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["productsperpage",{"_index":802,"title":{},"body":{"components/StoreComponent.html":{}}}],["producttablecomponent",{"_index":75,"title":{"components/ProductTableComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":940,"title":{},"body":{"index.html":{}}}],["properties",{"_index":125,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"properties.html":{}}}],["property",{"_index":303,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["protocol",{"_index":716,"title":{},"body":{"injectables/RestDataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["protocol}://${location.hostname}:${port",{"_index":722,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["provide",{"_index":521,"title":{},"body":{"injectables/Order.html":{},"modules/ProductModule.html":{}}}],["provided",{"_index":269,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["providedin",{"_index":213,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProductModule.html":{}}}],["public",{"_index":172,"title":{},"body":{"components/AuthComponent.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"classes/Product.html":{},"components/StoreComponent.html":{}}}],["push",{"_index":297,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["quality",{"_index":374,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["quantity",{"_index":248,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["quantity));//if",{"_index":292,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["quantity;//if",{"_index":286,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["real",{"_index":787,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["recalculate",{"_index":244,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["receive",{"_index":675,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["redirectto",{"_index":119,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":984,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":347,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["reload",{"_index":953,"title":{},"body":{"index.html":{}}}],["remove",{"_index":317,"title":{},"body":{"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{}}}],["removed",{"_index":313,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["removeline",{"_index":245,"title":{},"body":{"injectables/Cart.html":{}}}],["removeline(id",{"_index":254,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["removes",{"_index":315,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["repository",{"_index":405,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["represents",{"_index":334,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["requests",{"_index":797,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["reset",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"modules/ProductModule.html":{},"components/StoreComponent.html":{},"modules/StoreModule.html":{},"overview.html":{}}}],["response.success",{"_index":730,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["response.token",{"_index":731,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["rest",{"_index":790,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["rest.datasource",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{}}}],["restdatasource",{"_index":224,"title":{"injectables/RestDataSource.html":{}},"body":{"injectables/AuthService.html":{},"injectables/OrderRepository.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"coverage.html":{},"overview.html":{}}}],["restful",{"_index":580,"title":{},"body":{"classes/Product.html":{}}}],["result",{"_index":360,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["results",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":654,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["return",{"_index":216,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"components/CheckoutComponent.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["returned",{"_index":655,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["returns",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["root",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["root'},{'name",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["rounding",{"_index":877,"title":{},"body":{"components/StoreComponent.html":{}}}],["route",{"_index":210,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/StoreFirstGuard.html":{}}}],["route.component",{"_index":898,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["router",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["routermodule",{"_index":102,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"modules/StoreModule.html":{}}}],["routermodule.forchild",{"_index":112,"title":{},"body":{"modules/AdminModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forroot(routes",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":208,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/StoreFirstGuard.html":{}}}],["routes",{"_index":152,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":111,"title":{},"body":{"modules/AdminModule.html":{},"injectables/StoreFirstGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":947,"title":{},"body":{"index.html":{}}}],["running",{"_index":963,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"dependencies.html":{}}}],["same",{"_index":522,"title":{},"body":{"injectables/Order.html":{}}}],["saveorder",{"_index":529,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{}}}],["saveorder(order",{"_index":536,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{}}}],["saveproduct",{"_index":613,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{}}}],["saveproduct(product",{"_index":622,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{}}}],["saveproduct(product:product",{"_index":660,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["scaffolding",{"_index":955,"title":{},"body":{"index.html":{}}}],["seamless",{"_index":798,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["see",{"_index":669,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["selected",{"_index":834,"title":{},"body":{"components/StoreComponent.html":{}}}],["selectedcategory",{"_index":803,"title":{},"body":{"components/StoreComponent.html":{}}}],["selectedpage",{"_index":804,"title":{},"body":{"components/StoreComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["serve",{"_index":949,"title":{},"body":{"index.html":{}}}],["server",{"_index":946,"title":{},"body":{"index.html":{}}}],["service",{"_index":478,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"classes/Product.html":{}}}],["service,which",{"_index":779,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["services",{"_index":604,"title":{},"body":{"modules/ProductModule.html":{}}}],["set",{"_index":857,"title":{},"body":{"components/StoreComponent.html":{}}}],["setting",{"_index":323,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["shared",{"_index":514,"title":{},"body":{"injectables/Order.html":{}}}],["ship",{"_index":425,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["shipped",{"_index":490,"title":{},"body":{"injectables/Order.html":{}}}],["shopping",{"_index":384,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["simplechanges",{"_index":456,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["single",{"_index":332,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/ProductRepository.html":{}}}],["size",{"_index":867,"title":{},"body":{"components/StoreComponent.html":{}}}],["slice",{"_index":844,"title":{},"body":{"components/StoreComponent.html":{}}}],["slice(pageindex",{"_index":839,"title":{},"body":{"components/StoreComponent.html":{}}}],["solid",{"_index":441,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["soon",{"_index":427,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["sorts",{"_index":647,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"components/OrderTableComponent.html":{},"classes/Product.html":{},"components/ProductEditorComponent.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"index.html":{}}}],["source’s",{"_index":672,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["specified",{"_index":863,"title":{},"body":{"components/StoreComponent.html":{}}}],["splice",{"_index":314,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["sports",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{}}}],["sportsstore",{"_index":197,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/.../admin.module.ts",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rest.datasource.ts",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/admin/admin.module.ts",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/admin/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin/admin.component.ts:10",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin/admin.component.ts:15",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/auth.guard.ts",{"_index":203,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/admin/auth.guard.ts:13",{"_index":209,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/admin/auth.guard.ts:8",{"_index":204,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/admin/auth/auth.component.ts",{"_index":169,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/admin/auth/auth.component.ts:12",{"_index":184,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/admin/auth/auth.component.ts:13",{"_index":183,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/admin/auth/auth.component.ts:14",{"_index":178,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/admin/auth/auth.component.ts:20",{"_index":181,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/admin/order",{"_index":559,"title":{},"body":{"components/OrderTableComponent.html":{},"coverage.html":{}}}],["src/app/admin/product",{"_index":582,"title":{},"body":{"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/cart",{"_index":363,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"coverage.html":{}}}],["src/app/components/checkout/checkout.component.ts",{"_index":401,"title":{},"body":{"components/CheckoutComponent.html":{},"coverage.html":{}}}],["src/app/components/checkout/checkout.component.ts:12",{"_index":414,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/components/checkout/checkout.component.ts:13",{"_index":410,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/components/checkout/checkout.component.ts:15",{"_index":415,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/components/checkout/checkout.component.ts:16",{"_index":413,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/components/checkout/checkout.component.ts:18",{"_index":412,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/components/store/store.component.ts",{"_index":799,"title":{},"body":{"components/StoreComponent.html":{},"coverage.html":{}}}],["src/app/components/store/store.component.ts:13",{"_index":823,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:14",{"_index":822,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:15",{"_index":810,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:23",{"_index":824,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:32",{"_index":825,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:38",{"_index":814,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:44",{"_index":817,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:51",{"_index":820,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:58",{"_index":827,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/components/store/store.component.ts:64",{"_index":812,"title":{},"body":{"components/StoreComponent.html":{}}}],["src/app/directives/counter.directive.ts",{"_index":446,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"coverage.html":{}}}],["src/app/directives/counter.directive.ts:16",{"_index":454,"title":{},"body":{"directives/CounterDirective.html":{}}}],["src/app/directives/counter.directive.ts:23",{"_index":457,"title":{},"body":{"directives/CounterDirective.html":{}}}],["src/app/directives/counter.directive.ts:33",{"_index":487,"title":{},"body":{"classes/CounterDirectiveContext.html":{}}}],["src/app/directives/counter.directive.ts:34",{"_index":488,"title":{},"body":{"classes/CounterDirectiveContext.html":{}}}],["src/app/directives/counter.directive.ts:9",{"_index":452,"title":{},"body":{"directives/CounterDirective.html":{}}}],["src/app/models/auth.service",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{}}}],["src/app/models/auth.service.ts",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/models/auth.service.ts:12",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/models/auth.service.ts:17",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/models/auth.service.ts:21",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/models/auth.service.ts:8",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/models/cart.model",{"_index":371,"title":{},"body":{"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/StoreComponent.html":{}}}],["src/app/models/cart.model.ts",{"_index":239,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"coverage.html":{}}}],["src/app/models/cart.model.ts:10",{"_index":250,"title":{},"body":{"injectables/Cart.html":{}}}],["src/app/models/cart.model.ts:20",{"_index":259,"title":{},"body":{"injectables/Cart.html":{}}}],["src/app/models/cart.model.ts:28",{"_index":255,"title":{},"body":{"injectables/Cart.html":{}}}],["src/app/models/cart.model.ts:36",{"_index":252,"title":{},"body":{"injectables/Cart.html":{}}}],["src/app/models/cart.model.ts:50",{"_index":253,"title":{},"body":{"injectables/Cart.html":{}}}],["src/app/models/cart.model.ts:6",{"_index":264,"title":{},"body":{"injectables/Cart.html":{}}}],["src/app/models/cart.model.ts:65",{"_index":388,"title":{},"body":{"classes/CartLine.html":{}}}],["src/app/models/cart.model.ts:66",{"_index":389,"title":{},"body":{"classes/CartLine.html":{}}}],["src/app/models/cart.model.ts:68",{"_index":391,"title":{},"body":{"classes/CartLine.html":{}}}],["src/app/models/cart.model.ts:7",{"_index":262,"title":{},"body":{"injectables/Cart.html":{}}}],["src/app/models/cart.model.ts:8",{"_index":261,"title":{},"body":{"injectables/Cart.html":{}}}],["src/app/models/order.model",{"_index":416,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/models/order.model.ts",{"_index":489,"title":{},"body":{"injectables/Order.html":{},"coverage.html":{}}}],["src/app/models/order.model.ts:10",{"_index":500,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:11",{"_index":501,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:12",{"_index":497,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:13",{"_index":492,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:15",{"_index":495,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:17",{"_index":493,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:6",{"_index":498,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:7",{"_index":499,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:8",{"_index":494,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.model.ts:9",{"_index":496,"title":{},"body":{"injectables/Order.html":{}}}],["src/app/models/order.repository",{"_index":417,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/models/order.repository.ts",{"_index":524,"title":{},"body":{"injectables/OrderRepository.html":{},"coverage.html":{}}}],["src/app/models/order.repository.ts:10",{"_index":531,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/app/models/order.repository.ts:14",{"_index":535,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/app/models/order.repository.ts:20",{"_index":534,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/app/models/order.repository.ts:27",{"_index":537,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/app/models/order.repository.ts:31",{"_index":539,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/app/models/order.repository.ts:39",{"_index":533,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/app/models/order.repository.ts:9",{"_index":540,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["src/app/models/product.model",{"_index":679,"title":{},"body":{"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["src/app/models/product.model.ts",{"_index":565,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/app/models/product.model.ts:1",{"_index":569,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.model.ts:4",{"_index":572,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.model.ts:5",{"_index":573,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.model.ts:6",{"_index":570,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.model.ts:7",{"_index":571,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.model.ts:8",{"_index":574,"title":{},"body":{"classes/Product.html":{}}}],["src/app/models/product.repository",{"_index":680,"title":{},"body":{"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["src/app/models/product.repository.ts",{"_index":607,"title":{},"body":{"injectables/ProductRepository.html":{},"coverage.html":{}}}],["src/app/models/product.repository.ts:22",{"_index":621,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/app/models/product.repository.ts:30",{"_index":619,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/app/models/product.repository.ts:35",{"_index":617,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/app/models/product.repository.ts:39",{"_index":623,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/app/models/product.repository.ts:49",{"_index":616,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/app/models/product.repository.ts:8",{"_index":624,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/app/models/product.repository.ts:9",{"_index":614,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/app/models/rest.datasource.ts",{"_index":687,"title":{},"body":{"injectables/RestDataSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/rest.datasource.ts:14",{"_index":713,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:15",{"_index":712,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:17",{"_index":702,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:23",{"_index":695,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:30",{"_index":705,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:34",{"_index":706,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:38",{"_index":698,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:47",{"_index":707,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:52",{"_index":711,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:57",{"_index":701,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:62",{"_index":704,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:66",{"_index":700,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/rest.datasource.ts:71",{"_index":709,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["src/app/models/static.datasource.ts",{"_index":737,"title":{},"body":{"injectables/StaticDataSource.html":{},"coverage.html":{}}}],["src/app/models/static.datasource.ts:12",{"_index":770,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["src/app/models/static.datasource.ts:30",{"_index":738,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["src/app/models/static.datasource.ts:34",{"_index":739,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["src/app/modules/product.module.ts",{"_index":591,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/app/modules/store.module.ts",{"_index":906,"title":{},"body":{"modules/StoreModule.html":{}}}],["src/app/storefirst.guard.ts",{"_index":892,"title":{},"body":{"injectables/StoreFirstGuard.html":{},"coverage.html":{}}}],["src/app/storefirst.guard.ts:11",{"_index":895,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["src/app/storefirst.guard.ts:7",{"_index":894,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["started",{"_index":939,"title":{"index.html":{}},"body":{}}],["starting",{"_index":832,"title":{},"body":{"components/StoreComponent.html":{}}}],["starts",{"_index":322,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["state",{"_index":207,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CheckoutComponent.html":{},"injectables/Order.html":{},"injectables/StoreFirstGuard.html":{}}}],["statements",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["static.datasource",{"_index":543,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{}}}],["staticdatasource",{"_index":542,"title":{"injectables/StaticDataSource.html":{}},"body":{"injectables/OrderRepository.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/StaticDataSource.html":{},"coverage.html":{}}}],["store",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["store.component.css",{"_index":800,"title":{},"body":{"components/StoreComponent.html":{}}}],["store.component.html",{"_index":801,"title":{},"body":{"components/StoreComponent.html":{}}}],["storecomponent",{"_index":76,"title":{"components/StoreComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"modules/StoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["stored",{"_index":659,"title":{},"body":{"injectables/ProductRepository.html":{},"index.html":{}}}],["storefirst.guard",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["storefirstguard",{"_index":149,"title":{"injectables/StoreFirstGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/StoreFirstGuard.html":{},"coverage.html":{},"overview.html":{}}}],["storemodule",{"_index":138,"title":{"modules/StoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["string",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/Order.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"injectables/RestDataSource.html":{},"components/StoreComponent.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":848,"title":{},"body":{"components/StoreComponent.html":{}}}],["structure",{"_index":578,"title":{},"body":{"classes/Product.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["submitorder",{"_index":407,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["submitorder(form",{"_index":411,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["submitted",{"_index":406,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["subscribe",{"_index":674,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["subscribe(order",{"_index":552,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["subscribe(orders",{"_index":546,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["subscribe(p",{"_index":663,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["subscribe(response",{"_index":190,"title":{},"body":{"components/AuthComponent.html":{}}}],["subset",{"_index":841,"title":{},"body":{"components/StoreComponent.html":{}}}],["subtotal",{"_index":375,"title":{},"body":{"components/CartDetailComponent.html":{}}}],["summary",{"_index":394,"title":{},"body":{"components/CartSummaryComponent.html":{}}}],["summary'},{'name",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["summary.component",{"_index":907,"title":{},"body":{"modules/StoreModule.html":{}}}],["summary.component.css",{"_index":395,"title":{},"body":{"components/CartSummaryComponent.html":{}}}],["summary.component.html",{"_index":396,"title":{},"body":{"components/CartSummaryComponent.html":{}}}],["summary.component.ts",{"_index":393,"title":{},"body":{"components/CartSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:10",{"_index":398,"title":{},"body":{"components/CartSummaryComponent.html":{}}}],["summary.component.ts:9",{"_index":397,"title":{},"body":{"components/CartSummaryComponent.html":{}}}],["summary/cart",{"_index":392,"title":{},"body":{"components/CartSummaryComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["support",{"_index":985,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":986,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":795,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["system",{"_index":901,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["table",{"_index":561,"title":{},"body":{"components/OrderTableComponent.html":{},"components/ProductTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["table.component",{"_index":107,"title":{},"body":{"modules/AdminModule.html":{}}}],["table.component.css",{"_index":562,"title":{},"body":{"components/OrderTableComponent.html":{},"components/ProductTableComponent.html":{}}}],["table.component.html",{"_index":563,"title":{},"body":{"components/OrderTableComponent.html":{},"components/ProductTableComponent.html":{}}}],["table.component.ts",{"_index":560,"title":{},"body":{"components/OrderTableComponent.html":{},"components/ProductTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:10",{"_index":676,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["table.component.ts:14",{"_index":678,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["table.component.ts:19",{"_index":677,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["table/order",{"_index":110,"title":{},"body":{"modules/AdminModule.html":{},"components/OrderTableComponent.html":{},"coverage.html":{}}}],["table/product",{"_index":106,"title":{},"body":{"modules/AdminModule.html":{},"components/ProductTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":266,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"components/StoreComponent.html":{}}}],["tell",{"_index":602,"title":{},"body":{"modules/ProductModule.html":{}}}],["tells",{"_index":603,"title":{},"body":{"modules/ProductModule.html":{},"injectables/StaticDataSource.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["templateref",{"_index":451,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["test",{"_index":966,"title":{},"body":{"index.html":{}}}],["testing",{"_index":977,"title":{},"body":{"index.html":{}}}],["tests",{"_index":965,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":422,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["then(m",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["thereby",{"_index":864,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.address",{"_index":505,"title":{},"body":{"injectables/Order.html":{}}}],["this.auth.authenticate(this.username",{"_index":188,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.auth.clear",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.auth_token",{"_index":729,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.baseurl",{"_index":721,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.cart.addline(product",{"_index":883,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.cart.clear",{"_index":511,"title":{},"body":{"injectables/Order.html":{}}}],["this.cartprice",{"_index":321,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.categories",{"_index":628,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.changepage(1",{"_index":872,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.city",{"_index":506,"title":{},"body":{"injectables/Order.html":{}}}],["this.container.clear",{"_index":484,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["this.country",{"_index":509,"title":{},"body":{"injectables/Order.html":{}}}],["this.datasource.auth_token",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.datasource.authenticate(username",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.datasource.deleteorder(id",{"_index":557,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.datasource.deleteproduct(id).subscribe(p",{"_index":666,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.datasource.getorders",{"_index":545,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.datasource.saveorder(order",{"_index":550,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.datasource.saveproduct(product",{"_index":662,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.datasource.updateorder(order",{"_index":551,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.errormessage",{"_index":193,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.firstnavigation",{"_index":897,"title":{},"body":{"injectables/StoreFirstGuard.html":{}}}],["this.getoptions",{"_index":732,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.http.delete(`${this.baseurl}orders/${id",{"_index":735,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.http.delete(`${this.baseurl}products/${id",{"_index":734,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.http.get(this.baseurl",{"_index":723,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.http.post(this.baseurl",{"_index":724,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.http.put(`${this.baseurl}orders/${order.id",{"_index":736,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.http.put(`${this.baseurl}products/${product.id",{"_index":733,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["this.id",{"_index":503,"title":{},"body":{"injectables/Order.html":{}}}],["this.itemcount",{"_index":320,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.lines",{"_index":319,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.lines.find(line",{"_index":272,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.lines.findindex(line",{"_index":308,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.lines.foreach(l",{"_index":349,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.lines.push(new",{"_index":290,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.lines.splice(index",{"_index":311,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.loaded",{"_index":544,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.loadorders",{"_index":549,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.name",{"_index":504,"title":{},"body":{"injectables/Order.html":{}}}],["this.order.clear",{"_index":420,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.orders",{"_index":547,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.orders.splice(this.orders",{"_index":553,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.ordersent",{"_index":421,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.password",{"_index":189,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.product.price",{"_index":358,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.products",{"_index":627,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.products.find(p",{"_index":657,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.products.splice(this.products",{"_index":664,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.productsperpage",{"_index":840,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.productsperpage//calculate",{"_index":831,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.quantity",{"_index":361,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.recalculate",{"_index":307,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.recalculate();//updates",{"_index":298,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["this.repository.deleteproduct(id",{"_index":682,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["this.repository.getcategories",{"_index":854,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.repository.getproducts",{"_index":681,"title":{},"body":{"components/ProductTableComponent.html":{}}}],["this.repository.getproducts(this.selectedcategory",{"_index":838,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.repository.saveorder(this.order).subscribe(order",{"_index":419,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.router.navigatebyurl",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["this.router.navigatebyurl(\"/admin/auth",{"_index":215,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.router.navigatebyurl(\"/admin/main",{"_index":192,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.navigatebyurl(\"/cart\")//to",{"_index":884,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.selectedcategory",{"_index":858,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.selectedpage",{"_index":830,"title":{},"body":{"components/StoreComponent.html":{}}}],["this.shipped",{"_index":510,"title":{},"body":{"injectables/Order.html":{}}}],["this.state",{"_index":507,"title":{},"body":{"injectables/Order.html":{}}}],["this.submitted",{"_index":418,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.zip",{"_index":508,"title":{},"body":{"injectables/Order.html":{}}}],["through",{"_index":474,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/StaticDataSource.html":{}}}],["throughout",{"_index":515,"title":{},"body":{"injectables/Order.html":{}}}],["time",{"_index":852,"title":{},"body":{"components/StoreComponent.html":{}}}],["title",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["total",{"_index":357,"title":{},"body":{"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/StoreComponent.html":{}}}],["transition",{"_index":786,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["true",{"_index":218,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"components/CheckoutComponent.html":{},"injectables/OrderRepository.html":{},"injectables/StoreFirstGuard.html":{}}}],["tslib",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":267,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["type",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CartDetailComponent.html":{},"classes/CartLine.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"classes/Product.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"injectables/RestDataSource.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":284,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"injectables/ProductRepository.html":{},"components/StoreComponent.html":{}}}],["unique",{"_index":640,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["unit",{"_index":964,"title":{},"body":{"index.html":{}}}],["up",{"_index":878,"title":{},"body":{"components/StoreComponent.html":{}}}],["update",{"_index":855,"title":{},"body":{"components/StoreComponent.html":{}}}],["updated",{"_index":300,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["updateorder",{"_index":691,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["updateorder(order",{"_index":708,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["updateorders",{"_index":530,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["updateorders(order",{"_index":538,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["updateproduct",{"_index":692,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["updateproduct(product",{"_index":710,"title":{},"body":{"injectables/RestDataSource.html":{}}}],["updatequantity",{"_index":246,"title":{},"body":{"injectables/Cart.html":{}}}],["updatequantity(product",{"_index":258,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["updates",{"_index":344,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["url",{"_index":885,"title":{},"body":{"components/StoreComponent.html":{}}}],["use",{"_index":957,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":600,"title":{},"body":{"modules/ProductModule.html":{}}}],["used",{"_index":270,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{}}}],["user",{"_index":699,"title":{},"body":{"injectables/RestDataSource.html":{},"components/StoreComponent.html":{}}}],["username",{"_index":175,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["uses",{"_index":673,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["using",{"_index":279,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{}}}],["valid",{"_index":443,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["value",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/Cart.html":{},"classes/CartLine.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/StaticDataSource.html":{},"components/StoreComponent.html":{},"injectables/StoreFirstGuard.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":348,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["var",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartDetailComponent.html":{},"components/CartSummaryComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["variable",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":990,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":943,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":968,"title":{},"body":{"index.html":{}}}],["view",{"_index":472,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["viewcontainerref",{"_index":450,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["void",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/Cart.html":{},"components/CheckoutComponent.html":{},"directives/CounterDirective.html":{},"injectables/Order.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"components/ProductTableComponent.html":{},"components/StoreComponent.html":{}}}],["watch",{"_index":468,"title":{},"body":{"directives/CounterDirective.html":{},"classes/CounterDirectiveContext.html":{}}}],["we'll",{"_index":424,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["we\\'ll",{"_index":445,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["web",{"_index":581,"title":{},"body":{"classes/Product.html":{}}}],["won’t",{"_index":791,"title":{},"body":{"injectables/StaticDataSource.html":{}}}],["works",{"_index":564,"title":{},"body":{"components/OrderTableComponent.html":{},"components/ProductEditorComponent.html":{}}}],["yes",{"_index":257,"title":{},"body":{"injectables/Cart.html":{},"classes/Product.html":{},"components/StoreComponent.html":{}}}],["zero",{"_index":318,"title":{},"body":{"injectables/Cart.html":{},"classes/CartLine.html":{}}}],["zip",{"_index":491,"title":{},"body":{"injectables/Order.html":{}}}],["zip/postal",{"_index":433,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["zone.js",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProductModule.html":{},"modules/StoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin/admin.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin/admin.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin/admin.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/models/auth.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent {\n\n  constructor(private auth: AuthService,\n              private router: Router) {}\n\n  logout(){\n    this.auth.clear();\n    this.router.navigateByUrl(\"/\")\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            SPORTS STORE\n        \n    \n    \n        \n            \n                Products\n            \n            \n                Orders\n            \n            \n                Logout\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        SPORTS STORE                                                    Products                                        Orders                                        Logout                                                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAdminModule -->\n\nAuthComponent->AdminModule\n\n\n\n\n\nOrderTableComponent\n\nOrderTableComponent\n\nAdminModule -->\n\nOrderTableComponent->AdminModule\n\n\n\n\n\nProductEditorComponent\n\nProductEditorComponent\n\nAdminModule -->\n\nProductEditorComponent->AdminModule\n\n\n\n\n\nProductTableComponent\n\nProductTableComponent\n\nAdminModule -->\n\nProductTableComponent->AdminModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAdminModule -->\n\nAuthGuard->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            OrderTableComponent\n                        \n                        \n                            ProductEditorComponent\n                        \n                        \n                            ProductTableComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { AdminComponent } from \"./admin/admin.component\";\nimport { AuthGuard } from \"./auth.guard\";\nimport { AuthComponent } from \"./auth/auth.component\";\nimport { ProductTableComponent } from './product-table/product-table.component';\nimport { ProductEditorComponent } from './product-editor/product-editor.component';\nimport { OrderTableComponent } from './order-table/order-table.component';\n\nlet routing = RouterModule.forChild([\n    { path: \"auth\", component: AuthComponent },\n    { \n        path: \"main\", component: AdminComponent , canActivate: [AuthGuard],\n        children: [\n            { path: \"products/:mode/:id\", component: ProductEditorComponent},\n            { path: \"products/:mode/\", component: ProductEditorComponent},\n            { path: \"products\", component: ProductTableComponent},\n            { path: \"orders\", component: OrderTableComponent},\n            { path: \"**\", redirectTo: \"products\"},\n        ]\n    },\n    { path: \"**\", redirectTo: \"auth\" }\n\n]);\n\n@NgModule({\n    imports: [CommonModule, FormsModule, routing],\n    providers: [AuthGuard],\n    declarations: [AuthComponent, AdminComponent, ProductTableComponent, ProductEditorComponent, OrderTableComponent]\n})\nexport class AdminModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'elevate'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'elevate';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            StoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from './modules/store.module';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    StoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\n\nStoreFirstGuard\n\nStoreFirstGuard\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nStoreFirstGuard->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StoreFirstGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CartDetailComponent } from './components/cart-detail/cart-detail.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { StoreFirstGuard } from './storeFirst.guard';\n\n\nconst routes: Routes = [\n  { \n    path:\"store\", component: StoreComponent,\n    canActivate: [StoreFirstGuard]\n  },\n  {\n     path:\"cart\", component: CartDetailComponent,\n     canActivate: [StoreFirstGuard]\n    },\n  { \n    path:\"checkout\", component: CheckoutComponent,\n    canActivate: [StoreFirstGuard]\n  },\n  {\n    path: \"admin\",\n    loadChildren: () => \"import(\\\"./admin/admin.module\\\")\\\n        .then(m => m.AdminModule)\",\n    canActivate: [StoreFirstGuard]\n},\n  { path:\"**\", redirectTo: \"/store\"},\n];\n\n@NgModule({\n  providers: [StoreFirstGuard],\n  imports: [RouterModule.forRoot(routes),\n            \n            ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/auth/auth.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/auth/auth.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/auth/auth.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/auth/auth.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/auth/auth.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/models/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n  public username!: string;\n  public password!: string;\n  public errorMessage!: string;\n  \n\n  constructor(private router: Router,\n              private auth: AuthService){}\n\n  authenticate(form: NgForm) {\n    if(form.valid) {\n      //perform authentication\n      this.auth.authenticate(this.username, this.password)\n      .subscribe(response => {\n        if(response){\n          this.router.navigateByUrl(\"/admin/main\");\n        }\n        this.errorMessage = \"Authentication Failed\";\n      })\n      \n    } else {\n      this.errorMessage = \"Form Data invalid\"\n    }\n  }\n\n\n\n}\n\n    \n\n    \n        \n    SportsStore Admin\n  \n  \n    {{errorMessage}}\n  \n  \n    \n      \n        Name\n        \n      \n      \n        Password\n        \n      \n      \n        Go back\n        Log In\n      \n    \n  \n\n    \n\n    \n                \n                    ./auth.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    SportsStore Admin        {{errorMessage}}                      Name                            Password                            Go back        Log In            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/admin/auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '../models/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard {\n\n  constructor(private router: Router,\n              private auth: AuthService){}\n\n  canActivate(route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): boolean {\n\n        if(!this.auth.authenticated){\n          this.router.navigateByUrl(\"/admin/auth\");\n          return false;\n        }\n        return true;\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authenticated\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datasource: RestDataSource)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasource\n                                                  \n                                                        \n                                                                        RestDataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authenticated\n                    \n                \n\n                \n                    \n                        getauthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/auth.service.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestDataSource } from './rest.datasource';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private datasource: RestDataSource) { }\n\n  authenticate(username:string, password: string) :Observable{\n    return this.datasource.authenticate(username, password);\n\n  }\n\n  get authenticated(): boolean {\n    return this.datasource.auth_token != null;\n  }\n\n  clear() {\n    this.datasource.auth_token != null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Cart.html":{"url":"injectables/Cart.html","title":"injectable - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cart.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cartprice\n                            \n                            \n                                    Public\n                                itemCount\n                            \n                            \n                                    Public\n                                lines\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLine\n                            \n                            \n                                clear\n                            \n                            \n                                    Private\n                                recalculate\n                            \n                            \n                                removeLine\n                            \n                            \n                                updateQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addLine\n                        \n                    \n                \n            \n            \n                \naddLine(product: Product, quantity: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/cart.model.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/cart.model.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        recalculate\n                        \n                    \n                \n            \n            \n                \n                    \n                    recalculate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/cart.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeLine\n                        \n                    \n                \n            \n            \n                \nremoveLine(id?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/cart.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuantity\n                        \n                    \n                \n            \n            \n                \nupdateQuantity(product: Product, quantity: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/cart.model.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cartprice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/cart.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/cart.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lines\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartLine[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/cart.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\n\n@Injectable()\nexport class Cart {\n    public lines: CartLine[] = [];\n    public itemCount: number = 0;\n    public cartprice: number = 0;\n\n    addLine(product: Product, quantity: number = 1) {//takes two arguments.If quantity is not provided, the default value of 1 is used.\n        let line = this.lines.find(line => line.product.id == product.id);//look for an existing CartLine object that matches the product argument using find method on the lines array of CartLine objects.\n        if (line != undefined) {\n            line.quantity += quantity;//If an existing CartLine is found, its quantity is increased by the value of quantity passed to the method.    \n        } else {\n            this.lines.push(new CartLine(product, quantity));//If no existing CartLine is found, a new CartLine object is created using  product and quantity arguments passed to the method and added to the lines array using the push method.\n        }\n        this.recalculate();//updates the itemCount and cartPrice properties of the Cart object based on the updated lines array.\n    }\n\n    updateQuantity(product: Product, quantity: number) {//takes two arguments. Product object to be updated, and quantity, which is the new quantity of the CartLine object.\n        let line = this.lines.find(line => line.product.id == product.id);\n        if (line != undefined) {\n            line.quantity = Number(quantity);// If an existing CartLine is found, its quantity property is updated with the quantity argument passed to the method.\n        }//If no existing CartLine is found, nothing happens and the method exits.\n        this.recalculate();\n    }\n\n    removeLine(id?: number) {\n        let index = this.lines.findIndex(line => line.product.id == id);//finds the index of the CartLine object that matches the id argument using the findIndex method on the lines array of CartLine objects.\n        this.lines.splice(index, 1);//If an existing CartLine is found, it is removed from the lines array using the splice method with the index and 1 arguments. This removes one element from the lines array at the index of the found CartLine object.\n        this.recalculate();\n\n    }\n\n    //remove all CartLine objects from the cart and reset the itemCount and cartPrice properties to zero.\n    clear() {\n        this.lines = [];\n        this.itemCount = 0;\n        this.cartprice = 0;\n    }\n\n\n    //The method starts by setting the itemCount and cartPrice properties to zero using the assignment operator =.\n    //it iterates over each CartLine object in the lines array using the forEach method and a callback function that takes a single argument l, which \n    //represents the current CartLine object being processed.\n //Inside the callback function, it checks if the product property of the CartLine object exists and if the price property is not undefined. \n //If both conditions are true, it updates the itemCount property by adding the quantity of the current CartLine object to it, and updates the cartPrice property by adding \n //the product of the quantity and the price of the current CartLine object to it.\n //After iterating over all CartLine objects in the lines array, the itemCount and cartPrice properties of the Cart object are updated to reflect the updated values.\n    private recalculate() {\n        this.itemCount = 0;\n        this.cartprice = 0;\n        this.lines.forEach(l => {\n            if (l.product && l.product.price !== undefined) {\n                this.itemCount +=l.quantity;\n                this.cartprice +=(l.quantity * l.product.price);\n            }\n        })    \n    }\n\n}\n\n\n\nexport class CartLine{\n    constructor(public product: Product, public quantity: number) {}//single item in the Cart object, and it has two properties: product and quantity.\n\n    get lineTotal() {//calculates and returns the total price of the CartLine object.\n        if (this.product.price) {//If the price property of the product property of the CartLine object exists and is not undefined,\n            // it calculates the total price by multiplying the quantity property by the price property of the product and returns the result. \n            return this.quantity * this.product.price;\n        }\n        return 0;//If the price property is undefined, it returns 0.\n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartDetailComponent.html":{"url":"components/CartDetailComponent.html","title":"component - CartDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cart-detail/cart-detail.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart-detail\n            \n\n            \n                styleUrls\n                ./cart-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cart-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cart\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cart: Cart)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cart-detail/cart-detail.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cart\n                                                  \n                                                        \n                                                                        Cart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart-detail/cart-detail.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Cart } from 'src/app/models/cart.model';\n\n@Component({\n  selector: 'app-cart-detail',\n  templateUrl: './cart-detail.component.html',\n  styleUrls: ['./cart-detail.component.css']\n})\nexport class CartDetailComponent {\n  constructor(public cart: Cart){}\n\n}\n\n    \n\n    \n        \n    \n        \n            BASIC INTIMATES\n        \n    \n\n    \n        \n             Your Cart \n            \n                \n                    \n                        Quality\n                        Product\n                        Price\n                        Subtotal\n                    \n                \n                \n                    \n                        \n                            Your cart is empty\n                        \n                    \n\n                    \n                        \n                            \n                        \n\n                        {{ line.product.name }}\n\n                        \n                            {{ line.product.price | currency: \"Ksh.\":\"symbol\":\"1.0-0\"}}\n                        \n\n                        \n                            {{ (line.lineTotal) | currency: \"Ksh.\":\"symbol\":\"1.0-0\" }}\n                        \n\n                        \n                            \n                            Remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Total\n                        \n                            {{ cart.cartprice | currency: \"Ksh.\":\"symbol\":\"1.0-0\" }}\n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    Continue Shopping\n                \n                \n                Checkout                      \n                \n            \n        \n    \n\n \n    \n\n    \n                \n                    ./cart-detail.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        BASIC INTIMATES                                     Your Cart                                                                         Quality                        Product                        Price                        Subtotal                                                                                                                            Your cart is empty                                                                                                                                                                    {{ line.product.name }}                                                    {{ line.product.price | currency: \"Ksh.\":\"symbol\":\"1.0-0\"}}                                                                            {{ (line.lineTotal) | currency: \"Ksh.\":\"symbol\":\"1.0-0\" }}                                                                                                        Remove                                                                                                                                                    Total                                                    {{ cart.cartprice | currency: \"Ksh.\":\"symbol\":\"1.0-0\" }}                                                                                                                                                Continue Shopping                                                Checkout                                                               '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'CartDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartLine.html":{"url":"classes/CartLine.html","title":"class - CartLine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartLine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/cart.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                product\n                            \n                            \n                                    Public\n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    lineTotal\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(product: Product, quantity: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/cart.model.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        product\n                                                  \n                                                        \n                                                                        Product\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quantity\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/cart.model.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/cart.model.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        lineTotal\n                    \n                \n\n                \n                    \n                        getlineTotal()\n                    \n                \n                            \n                                \n                                    Defined in src/app/models/cart.model.ts:68\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\n\n@Injectable()\nexport class Cart {\n    public lines: CartLine[] = [];\n    public itemCount: number = 0;\n    public cartprice: number = 0;\n\n    addLine(product: Product, quantity: number = 1) {//takes two arguments.If quantity is not provided, the default value of 1 is used.\n        let line = this.lines.find(line => line.product.id == product.id);//look for an existing CartLine object that matches the product argument using find method on the lines array of CartLine objects.\n        if (line != undefined) {\n            line.quantity += quantity;//If an existing CartLine is found, its quantity is increased by the value of quantity passed to the method.    \n        } else {\n            this.lines.push(new CartLine(product, quantity));//If no existing CartLine is found, a new CartLine object is created using  product and quantity arguments passed to the method and added to the lines array using the push method.\n        }\n        this.recalculate();//updates the itemCount and cartPrice properties of the Cart object based on the updated lines array.\n    }\n\n    updateQuantity(product: Product, quantity: number) {//takes two arguments. Product object to be updated, and quantity, which is the new quantity of the CartLine object.\n        let line = this.lines.find(line => line.product.id == product.id);\n        if (line != undefined) {\n            line.quantity = Number(quantity);// If an existing CartLine is found, its quantity property is updated with the quantity argument passed to the method.\n        }//If no existing CartLine is found, nothing happens and the method exits.\n        this.recalculate();\n    }\n\n    removeLine(id?: number) {\n        let index = this.lines.findIndex(line => line.product.id == id);//finds the index of the CartLine object that matches the id argument using the findIndex method on the lines array of CartLine objects.\n        this.lines.splice(index, 1);//If an existing CartLine is found, it is removed from the lines array using the splice method with the index and 1 arguments. This removes one element from the lines array at the index of the found CartLine object.\n        this.recalculate();\n\n    }\n\n    //remove all CartLine objects from the cart and reset the itemCount and cartPrice properties to zero.\n    clear() {\n        this.lines = [];\n        this.itemCount = 0;\n        this.cartprice = 0;\n    }\n\n\n    //The method starts by setting the itemCount and cartPrice properties to zero using the assignment operator =.\n    //it iterates over each CartLine object in the lines array using the forEach method and a callback function that takes a single argument l, which \n    //represents the current CartLine object being processed.\n //Inside the callback function, it checks if the product property of the CartLine object exists and if the price property is not undefined. \n //If both conditions are true, it updates the itemCount property by adding the quantity of the current CartLine object to it, and updates the cartPrice property by adding \n //the product of the quantity and the price of the current CartLine object to it.\n //After iterating over all CartLine objects in the lines array, the itemCount and cartPrice properties of the Cart object are updated to reflect the updated values.\n    private recalculate() {\n        this.itemCount = 0;\n        this.cartprice = 0;\n        this.lines.forEach(l => {\n            if (l.product && l.product.price !== undefined) {\n                this.itemCount +=l.quantity;\n                this.cartprice +=(l.quantity * l.product.price);\n            }\n        })    \n    }\n\n}\n\n\n\nexport class CartLine{\n    constructor(public product: Product, public quantity: number) {}//single item in the Cart object, and it has two properties: product and quantity.\n\n    get lineTotal() {//calculates and returns the total price of the CartLine object.\n        if (this.product.price) {//If the price property of the product property of the CartLine object exists and is not undefined,\n            // it calculates the total price by multiplying the quantity property by the price property of the product and returns the result. \n            return this.quantity * this.product.price;\n        }\n        return 0;//If the price property is undefined, it returns 0.\n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartSummaryComponent.html":{"url":"components/CartSummaryComponent.html","title":"component - CartSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cart-summary/cart-summary.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart-summary\n            \n\n            \n                styleUrls\n                ./cart-summary.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cart-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cart\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cart: Cart)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cart-summary/cart-summary.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cart\n                                                  \n                                                        \n                                                                        Cart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cart-summary/cart-summary.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Cart } from 'src/app/models/cart.model';\n\n@Component({\n  selector: 'app-cart-summary',\n  templateUrl: './cart-summary.component.html',\n  styleUrls: ['./cart-summary.component.css']\n})\nexport class CartSummaryComponent {\n  constructor(public cart: Cart) {}\n\n}\n\n    \n\n    \n        \n    \n        Your cart:\n         0\">\n            {{ cart.itemCount }} item(s)\n            {{ cart.cartprice | currency: \"Ksh.\":\"symbol\":\"1.0-0\" }}\n        \n        \n            (empty)\n        \n    \n    \n    \n\n    \n\n\n    \n\n    \n                \n                    ./cart-summary.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Your cart:         0\">            {{ cart.itemCount }} item(s)            {{ cart.cartprice | currency: \"Ksh.\":\"symbol\":\"1.0-0\" }}                            (empty)                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'CartSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/checkout/checkout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkout\n            \n\n            \n                styleUrls\n                ./checkout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                order\n                            \n                            \n                                orderSent\n                            \n                            \n                                    Public\n                                repository\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: OrderRepository, order: Order)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/checkout/checkout.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        OrderRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        Order\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitOrder\n                        \n                    \n                \n            \n            \n                \nsubmitOrder(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/checkout/checkout.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/checkout/checkout.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/checkout/checkout.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderRepository\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/checkout/checkout.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/checkout/checkout.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Order } from 'src/app/models/order.model';\nimport { OrderRepository } from 'src/app/models/order.repository';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent {\n  orderSent: boolean = false;\n  submitted: boolean = false;\n\n  constructor(public repository: OrderRepository,\n              public order: Order) {}\n\n  submitOrder(form: NgForm) {\n    this.submitted = true;\n    if(form.valid) {\n      this.repository.saveOrder(this.order).subscribe(order =>{\n        this.order.clear();\n        this.orderSent = true;\n        this.submitted = false;\n      });\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        BASIC INTIMATES\n      \n    \n  \n\n  \n    Thanks!\n    Thanks for placing your order\n    We'll ship your goods as soon as possible\n    \n        Return to Store\n    \n  \n\n  \n         \n            Name\n            \n            \n              Please enter your name\n            \n          \n\n          \n            Address\n            \n            \n              Please enter your address\n            \n          \n\n          \n            City\n            \n            \n              Please enter your city\n            \n          \n\n          \n            State\n            \n            \n              Please enter your state\n            \n          \n\n          \n            Zip/Postal Code\n            \n            \n              Please enter your zip/postal code\n            \n          \n\n          \n            Country\n            \n            \n              Please enter your country\n            \n          \n\n          \n            Back\n            Complete Order\n          \n\n\n  \n\n\n\n    \n\n    \n                \n                    ./checkout.component.css\n                \n                input.ng-dirty.ng-invalid { border: 2px solid #ff0000 }\ninput.ng-dirty.ng-valid { border: 2px solid #6bc502 }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  BASIC INTIMATES                  Thanks!    Thanks for placing your order    We\\'ll ship your goods as soon as possible            Return to Store                             Name                                      Please enter your name                                            Address                                      Please enter your address                                            City                                      Please enter your city                                            State                                      Please enter your state                                            Zip/Postal Code                                      Please enter your zip/postal code                                            Country                                      Please enter your country                                            Back            Complete Order            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CounterDirective.html":{"url":"directives/CounterDirective.html","title":"directive - CounterDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  CounterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/counter.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [counterOf]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                counterOf\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: ViewContainerRef, template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/counter.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        counterOf\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/counter.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/counter.directive.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive, ViewContainerRef, TemplateRef, Input, Attribute, SimpleChanges\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[counterOf]\"\n})\nexport class CounterDirective {\n\n  constructor(private container: ViewContainerRef,\n      private template: TemplateRef) {\n  }\n//counterOf\" is bound to a number value passed to the directive from the parent component using the \"@Input\" decorator.\n  @Input(\"counterOf\")\n  counter!: number;\n\n  //The \"ngOnChanges\"is implemented to watch for changes to the \"counterOf\" input property.\n  // When a change occurs, the method clears the container view and loops through the counter value to create an embedded \n  //view using the \"createEmbeddedView\" method of the ViewContainerRef service.\n  //For each iteration, the embedded view is created using the provided template and a new instance of the \"CounterDirectiveContext\" class. \n  //The context class is used to pass a new number value for each element in the template.\n  ngOnChanges(changes: SimpleChanges) {\n      this.container.clear();\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CounterDirectiveContext.html":{"url":"classes/CounterDirectiveContext.html","title":"class - CounterDirectiveContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CounterDirectiveContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/counter.directive.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $implicit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor($implicit: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/counter.directive.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $implicit\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        $implicit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/directives/counter.directive.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Directive, ViewContainerRef, TemplateRef, Input, Attribute, SimpleChanges\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[counterOf]\"\n})\nexport class CounterDirective {\n\n  constructor(private container: ViewContainerRef,\n      private template: TemplateRef) {\n  }\n//counterOf\" is bound to a number value passed to the directive from the parent component using the \"@Input\" decorator.\n  @Input(\"counterOf\")\n  counter!: number;\n\n  //The \"ngOnChanges\"is implemented to watch for changes to the \"counterOf\" input property.\n  // When a change occurs, the method clears the container view and loops through the counter value to create an embedded \n  //view using the \"createEmbeddedView\" method of the ViewContainerRef service.\n  //For each iteration, the embedded view is created using the provided template and a new instance of the \"CounterDirectiveContext\" class. \n  //The context class is used to pass a new number value for each element in the template.\n  ngOnChanges(changes: SimpleChanges) {\n      this.container.clear();\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Order.html":{"url":"injectables/Order.html","title":"injectable - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/order.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                address\n                            \n                            \n                                    Public\n                                cart\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                shipped\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                zip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cart: Cart)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/order.model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cart\n                                                  \n                                                        \n                                                                        Cart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/order.model.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        shipped\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.model.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Cart } from \"./cart.model\";\n\n@Injectable()\nexport class Order {\n    public id: number | null = null;\n    public name: string | null = null;\n    public address: string | null = null;;\n    public city: string | null = null;;\n    public state: string | null = null;;\n    public zip: string | null = null;;\n    public country: string | null = null;;\n    public shipped: boolean = false;\n\n    constructor(public cart: Cart) { }\n\n    clear() {\n        this.id = null;\n        this.name = this.address = this.city = null;\n        this.state = this.zip = this.country = null;\n        this.shipped = false;\n        this.cart.clear();\n    }\n}\n//The Order class will be another service, which means there will be one instance shared throughout\n//the application. When Angular creates the Order object, it will detect the Cart constructor parameter and\n//provide the same Cart object that is used elsewhere in the application.\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderRepository.html":{"url":"injectables/OrderRepository.html","title":"injectable - OrderRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/order.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loaded\n                            \n                            \n                                    Private\n                                orders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteOrder\n                            \n                            \n                                getOrders\n                            \n                            \n                                loadOrders\n                            \n                            \n                                saveOrder\n                            \n                            \n                                updateOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: RestDataSource)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/order.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                        RestDataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOrder\n                        \n                    \n                \n            \n            \n                \ndeleteOrder(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/order.repository.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrders\n                        \n                    \n                \n            \n            \n                \ngetOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/order.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Order[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrders\n                        \n                    \n                \n            \n            \n                \nloadOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/order.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveOrder\n                        \n                    \n                \n            \n            \n                \nsaveOrder(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/order.repository.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrders\n                        \n                    \n                \n            \n            \n                \nupdateOrders(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/order.repository.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.repository.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order.repository.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Order } from \"./order.model\";\nimport { RestDataSource } from \"./rest.datasource\";\nimport { StaticDataSource } from \"./static.datasource\";\n\n@Injectable()\nexport class OrderRepository {\n    private orders: Order[] = [];\n    private loaded: boolean = false;\n\n    constructor(private dataSource: RestDataSource){}\n\n    loadOrders(){\n        this.loaded = true;\n        this.dataSource.getOrders()\n        .subscribe(orders => this.orders = orders);\n    }\n\n    getOrders(): Order[] {\n        if(!this.loaded) {\n            this.loadOrders();\n        }\n        return this.orders;\n    }\n\n    saveOrder(order: Order): Observable {\n        return this.dataSource.saveOrder(order)\n    }\n\n    updateOrders(order: Order) {\n        this.dataSource.updateOrder(order)\n        .subscribe(order => {\n            this.orders.splice(this.orders\n                .findIndex(o => o.id == order.id), 1, order);\n        });\n    }\n\n    deleteOrder(id: number) {\n        this.dataSource.deleteOrder(id)\n        .subscribe(order => {\n            this.orders.splice(this.orders\n                .findIndex(o => o.id == order.id),1, order)\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderTableComponent.html":{"url":"components/OrderTableComponent.html","title":"component - OrderTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/order-table/order-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-table\n            \n\n            \n                styleUrls\n                ./order-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./order-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-order-table',\n  templateUrl: './order-table.component.html',\n  styleUrls: ['./order-table.component.css']\n})\nexport class OrderTableComponent {\n\n}\n\n    \n\n    \n        order-table works!\n\n    \n\n    \n                \n                    ./order-table.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'order-table works!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrderTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/product.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                category\n                            \n                            \n                                    Public\n                                    Optional\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: number, name?: string, category?: string, description?: string, price?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/product.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        category\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        price\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/product.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/product.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/product.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/product.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/product.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n\n    constructor(\n        public id?: number,\n        public name?: string,\n        public category?: string,\n        public description?: string,\n        public price?: number) { }\n}\n//The Product class defines a constructor that accepts id, name, category, description, and price\n//properties, which correspond to the structure of the data used to populate the RESTful web service\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductEditorComponent.html":{"url":"components/ProductEditorComponent.html","title":"component - ProductEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/product-editor/product-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-editor\n            \n\n            \n                styleUrls\n                ./product-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./product-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-product-editor',\n  templateUrl: './product-editor.component.html',\n  styleUrls: ['./product-editor.component.css']\n})\nexport class ProductEditorComponent {\n\n}\n\n    \n\n    \n        product-editor works!\n\n    \n\n    \n                \n                    ./product-editor.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'product-editor works!'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProductEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nAuthService->ProductModule\n\n\n\n\n\nCart\n\nCart\n\nProductModule -->\n\nCart->ProductModule\n\n\n\n\n\nOrder\n\nOrder\n\nProductModule -->\n\nOrder->ProductModule\n\n\n\n\n\nOrderRepository\n\nOrderRepository\n\nProductModule -->\n\nOrderRepository->ProductModule\n\n\n\n\n\nProductRepository\n\nProductRepository\n\nProductModule -->\n\nProductRepository->ProductModule\n\n\n\n\n\nRestDataSource\n\nRestDataSource\n\nProductModule -->\n\nRestDataSource->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            Cart\n                        \n                        \n                            Order\n                        \n                        \n                            OrderRepository\n                        \n                        \n                            ProductRepository\n                        \n                        \n                            RestDataSource\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { AuthService } from \"../models/auth.service\";\nimport { Cart } from \"../models/cart.model\";\nimport { Order } from \"../models/order.model\";\nimport { OrderRepository } from \"../models/order.repository\";\nimport { ProductRepository } from \"../models/product.repository\";\nimport { RestDataSource } from \"../models/rest.datasource\";\nimport { StaticDataSource } from \"../models/static.datasource\";\n\n@NgModule({\n    imports: [HttpClientModule],\n    providers: [ProductRepository, Cart, Order, OrderRepository,\n      { provide: StaticDataSource, useClass: RestDataSource },\n       RestDataSource, AuthService]\n})\nexport class ProductModule{}\n\n//The @NgModule decorator is used to create feature modules, and its properties tell Angular how the\n//module should be used. There is only one property in this module, providers, and it tells Angular which\n//classes should be used as services for the dependency injection feature,\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductRepository.html":{"url":"injectables/ProductRepository.html","title":"injectable - ProductRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/product.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                categories\n                            \n                            \n                                    Private\n                                products\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProduct\n                            \n                            \n                                getCategories\n                            \n                            \n                                getProduct\n                            \n                            \n                                getProducts\n                            \n                            \n                                saveProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: RestDataSource)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/product.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                        RestDataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/product.repository.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/product.repository.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProduct\n                        \n                    \n                \n            \n            \n                \ngetProduct(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/product.repository.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Product | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts(category: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/product.repository.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Product[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveProduct\n                        \n                    \n                \n            \n            \n                \nsaveProduct(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/product.repository.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/product.repository.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/product.repository.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\nimport { RestDataSource } from \"./rest.datasource\";\nimport { StaticDataSource } from \"./static.datasource\";\n\n@Injectable()\nexport class ProductRepository {\n    private products: Product[] = [];\n    private categories: any[] = [];\n    \n\n    constructor(private dataSource: RestDataSource){\n        dataSource.getProducts().subscribe(data =>{//returns an observable that emits product data\n            this.products = data;\n            this.categories = data.map(p => p.category)//creates new array of category names by extracting the category property from each product object in the data.\n            .filter((c, index,array) => array.indexOf(c) == index).sort();// filters out any duplicate categories and only keep the unique ones.\n        });//indexOf() keeps only the first occurrence of each category.sort() sorts alphabetically\n    }\n\n    //This method returns an array of Product objects that match the provided category filter. \n    //If no category parameter is provided, it returns all products.\n    getProducts(category: any = null): Product[]{\n        return this.products\n        .filter(p => category == null || category == p.category)\n    }\n\n\n//this method allows you to retrieve a single Product object based on a provided id parameter. \n//If a matching Product object is found, it is returned. Otherwise, undefined is returned.\n    getProduct(id: number): Product | undefined{\n        return this.products.find(p => p.id == id);\n    }\n\n    //this method allows you to retrieve an array of unique categories for the products stored in the class instance.\n    getCategories(): string[]{\n        return this.categories;\n    }\n\n    saveProduct(product:Product){\n        if(product.id == null || product.id ==0) {\n            this.dataSource.saveProduct(product)\n            .subscribe(p => {\n                this.products.splice(this.products\n                    .findIndex(p => p.id == product.id), 1, product)\n            });\n        }\n    }\n\n    deleteProduct(id: number){\n        this.dataSource.deleteProduct(id).subscribe(p => {\n            this.products.splice(this.products\n                .findIndex(p => p.id == id), 1)\n            })\n    }\n    \n}\n//When Angular needs to create a new instance of the repository, it will inspect the class and see that it\n//needs a StaticDataSource object to invoke the ProductRepository constructor and create a new object.\n//The repository constructor calls the data source’s getProducts method and then uses the subscribe\n//method on the Observable object that is returned to receive the product data.\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductTableComponent.html":{"url":"components/ProductTableComponent.html","title":"component - ProductTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/product-table/product-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-table\n            \n\n            \n                styleUrls\n                ./product-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./product-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProduct\n                            \n                            \n                                getProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ProductRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/product-table/product-table.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ProductRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/product-table/product-table.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/product-table/product-table.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Product[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Product } from 'src/app/models/product.model';\nimport { ProductRepository } from 'src/app/models/product.repository';\n\n@Component({\n  selector: 'app-product-table',\n  templateUrl: './product-table.component.html',\n  styleUrls: ['./product-table.component.css']\n})\nexport class ProductTableComponent {\n\n  constructor(private repository: ProductRepository){}\n\n  getProducts(): Product[] {\n    return this.repository.getProducts();\n  }\n\n\n  deleteProduct(id: number) {\n    this.repository.deleteProduct(id);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            ID\n            Name\n            Category\n            Price\n        \n    \n\n    \n        \n        \n            {{ p.id }}\n            {{ p.name }}\n            {{ p.category }}\n            {{ p.price | currency: \"Ksh.\":\"symbol\":\"1.0-0\" }}\n            \n            \n                \n                    Edit\n                \n                \n                    Delete\n                \n            \n\n        \n    \n\n\n\n    Create New Product\n\n\n    \n\n    \n                \n                    ./product-table.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ID            Name            Category            Price                                            {{ p.id }}            {{ p.name }}            {{ p.category }}            {{ p.price | currency: \"Ksh.\":\"symbol\":\"1.0-0\" }}                                                            Edit                                                    Delete                                            Create New Product'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProductTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestDataSource.html":{"url":"injectables/RestDataSource.html","title":"injectable - RestDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RestDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/rest.datasource.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth_token\n                            \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                deleteOrder\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                    Private\n                                getOptions\n                            \n                            \n                                getOrders\n                            \n                            \n                                getProducts\n                            \n                            \n                                saveOrder\n                            \n                            \n                                saveProduct\n                            \n                            \n                                updateOrder\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/rest.datasource.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(user: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOrder\n                        \n                    \n                \n            \n            \n                \ndeleteOrder(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { headers: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrders\n                        \n                    \n                \n            \n            \n                \ngetOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveOrder\n                        \n                    \n                \n            \n            \n                \nsaveOrder(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveProduct\n                        \n                    \n                \n            \n            \n                \nsaveProduct(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrder\n                        \n                    \n                \n            \n            \n                \nupdateOrder(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/rest.datasource.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/rest.datasource.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/rest.datasource.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map, Observable } from \"rxjs\";\nimport { Product } from \"./product.model\";\nimport { Order } from \"./order.model\";\n\n\n\nconst PROTOCOL = \"http\";\nconst PORT = 3500;\n\n@Injectable()\nexport class RestDataSource {\n    baseUrl!: string;\n    auth_token!: string;\n\n    private getOptions() {\n        return {\n            headers: new HttpHeaders({\n                \"Authorization\": `Bearer`\n            })\n        }\n    }\n\n\n    constructor(private http: HttpClient) {\n        this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/`;      \n    }\n\n    getProducts(): Observable {\n        return this.http.get(this.baseUrl + 'products');\n    }\n\n    saveOrder(order: Order): Observable {\n        return this.http.post(this.baseUrl + \"orders\", order);\n    }\n\n    authenticate(user: string, pass: string) :Observable {\n        return this.http.post(this.baseUrl + \"login\", {\n            name:user, password:pass\n        }).pipe(map(response => {\n            this.auth_token = response.success ? response.token: null;\n            return response.success;\n        }))\n    }\n\n    saveProduct(product: Product): Observable {\n        return this.http.post(this.baseUrl + \"products\",\n            product, this.getOptions());\n    }\n\n    updateProduct(product: Product): Observable {\n        return this.http.put(`${this.baseUrl}products/${product.id}`,\n            product, this.getOptions());\n    }\n\n    deleteProduct(id: number): Observable {\n        return this.http.delete(`${this.baseUrl}products/${id}`,\n            this.getOptions());\n    }\n    \n    getOrders(): Observable {\n        return this.http.get(this.baseUrl + \"orders\", this.getOptions());\n    }\n    \n    deleteOrder(id: number): Observable {\n        return this.http.delete(`${this.baseUrl}orders/${id}`,\n            this.getOptions());\n    }\n    \n    updateOrder(order: Order): Observable {\n        return this.http.put(`${this.baseUrl}orders/${order.id}`,\n            order, this.getOptions());\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StaticDataSource.html":{"url":"injectables/StaticDataSource.html","title":"injectable - StaticDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StaticDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/static.datasource.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                products\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProducts\n                            \n                            \n                                saveOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/static.datasource.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveOrder\n                        \n                    \n                \n            \n            \n                \nsaveOrder(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/static.datasource.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        new Product(1, \"Product 1\", \"Category 1\", \"Product 1 (Category 1)\", 100),\n        new Product(2, \"Product 2\", \"Category 1\", \"Product 2 (Category 1)\", 100),\n        new Product(3, \"Product 3\", \"Category 1\", \"Product 3 (Category 1)\", 100),\n        new Product(4, \"Product 4\", \"Category 1\", \"Product 4 (Category 1)\", 100),\n        new Product(5, \"Product 5\", \"Category 1\", \"Product 5 (Category 1)\", 100),\n        new Product(6, \"Product 6\", \"Category 2\", \"Product 6 (Category 2)\", 100),\n        new Product(7, \"Product 7\", \"Category 2\", \"Product 7 (Category 2)\", 100),\n        new Product(8, \"Product 8\", \"Category 2\", \"Product 8 (Category 2)\", 100),\n        new Product(9, \"Product 9\", \"Category 2\", \"Product 9 (Category 2)\", 100),\n        new Product(10, \"Product 10\", \"Category 2\", \"Product 10 (Category 2)\", 100),\n        new Product(11, \"Product 11\", \"Category 3\", \"Product 11 (Category 3)\", 100),\n        new Product(12, \"Product 12\", \"Category 3\", \"Product 12 (Category 3)\", 100),\n        new Product(13, \"Product 13\", \"Category 3\", \"Product 13 (Category 3)\", 100),\n        new Product(14, \"Product 14\", \"Category 3\", \"Product 14 (Category 3)\", 100),\n        new Product(15, \"Product 15\", \"Category 3\", \"Product 15 (Category 3)\", 100),\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/models/static.datasource.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\nimport { Observable, from } from \"rxjs\"; //Handling Orders\nimport { Order } from \"./order.model\";\n//import { Order } from \"./order.model\";\n\n//The StaticDataSource class defines a method called getProducts, which returns the dummy data.\n//The result of calling the getProducts method is an Observable, which is an Observable that produces arrays of Product objects.\n\n@Injectable()//This decorator tells Angular,this class will be used as a service,which allows other classes to access its functionality through dependency injection.\nexport class StaticDataSource {\n    private products: Product[] = [\n        new Product(1, \"Product 1\", \"Category 1\", \"Product 1 (Category 1)\", 100),\n        new Product(2, \"Product 2\", \"Category 1\", \"Product 2 (Category 1)\", 100),\n        new Product(3, \"Product 3\", \"Category 1\", \"Product 3 (Category 1)\", 100),\n        new Product(4, \"Product 4\", \"Category 1\", \"Product 4 (Category 1)\", 100),\n        new Product(5, \"Product 5\", \"Category 1\", \"Product 5 (Category 1)\", 100),\n        new Product(6, \"Product 6\", \"Category 2\", \"Product 6 (Category 2)\", 100),\n        new Product(7, \"Product 7\", \"Category 2\", \"Product 7 (Category 2)\", 100),\n        new Product(8, \"Product 8\", \"Category 2\", \"Product 8 (Category 2)\", 100),\n        new Product(9, \"Product 9\", \"Category 2\", \"Product 9 (Category 2)\", 100),\n        new Product(10, \"Product 10\", \"Category 2\", \"Product 10 (Category 2)\", 100),\n        new Product(11, \"Product 11\", \"Category 3\", \"Product 11 (Category 3)\", 100),\n        new Product(12, \"Product 12\", \"Category 3\", \"Product 12 (Category 3)\", 100),\n        new Product(13, \"Product 13\", \"Category 3\", \"Product 13 (Category 3)\", 100),\n        new Product(14, \"Product 14\", \"Category 3\", \"Product 14 (Category 3)\", 100),\n        new Product(15, \"Product 15\", \"Category 3\", \"Product 15 (Category 3)\", 100),\n    ];\n\n    getProducts(): Observable {\n        return from([this.products]);\n    }\n\n    saveOrder(order: Order): Observable{\n        console.log(JSON.stringify(order));\n        return from([order])\n\n    }\n}\n//To prepare for the transition from dummy to real data, I am going to feed the application data using a data source.\n//The rest of the application won’t know where the data is coming from, which will make the switch to getting data using HTTP requests seamless.\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoreComponent.html":{"url":"components/StoreComponent.html","title":"component - StoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/store/store.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-store\n            \n\n            \n                styleUrls\n                ./store.component.css\n            \n\n\n\n            \n                templateUrl\n                ./store.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                productsPerPage\n                            \n                            \n                                    Public\n                                selectedCategory\n                            \n                            \n                                    Public\n                                selectedPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToCart\n                            \n                            \n                                changeCategory\n                            \n                            \n                                changePage\n                            \n                            \n                                changePageSize\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    products\n                                \n                                \n                                    categories\n                                \n                                \n                                    pageCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ProductRepository, cart: Cart, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/store/store.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ProductRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cart\n                                                  \n                                                        \n                                                                        Cart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \naddProductToCart(product: Product)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/store/store.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeCategory\n                        \n                    \n                \n            \n            \n                \nchangeCategory(newCategory?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/store/store.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newCategory\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(newPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/store/store.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePageSize\n                        \n                    \n                \n            \n            \n                \nchangePageSize(newSize: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/store/store.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        productsPerPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/app/components/store/store.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/store/store.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/store/store.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        products\n                    \n                \n\n                \n                    \n                        getproducts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/store/store.component.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        categories\n                    \n                \n\n                \n                    \n                        getcategories()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/store/store.component.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pageCount\n                    \n                \n\n                \n                    \n                        getpageCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/store/store.component.ts:58\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Cart } from 'src/app/models/cart.model';\nimport { Product } from 'src/app/models/product.model';\nimport { ProductRepository } from 'src/app/models/product.repository';\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent {\n  public selectedCategory = null;\n  public productsPerPage = 4;\n  public selectedPage = 1;\n\n  constructor(private repository: ProductRepository,\n              private cart: Cart,\n              private router: Router){}\n\n//a property called products returns an array of Product objects\n//when you access the products property, it will call getProducts on repository and return an array of Product objects.\n  get products(): Product[] {\n    let pageIndex = (this.selectedPage -1) * this.productsPerPage//calculate the starting index of the products array to return, based on the currently selected page and the number of products to display per page.\n    return this.repository.getProducts(this.selectedCategory)\n    .slice(pageIndex, pageIndex + this.productsPerPage);// returns a subset of the products array, starting from the calculated starting index and including the number of products to display per page. \n  }//slice() method returns a new array containing the selected elements.\n\n  //a property named categories returns an array of strings.\n  //The property is defined using a getter method, which means that the value of the property is computed dynamically every time it is accessed.\n  //when you access the categories property, it calls the getCategories method on the repository object and return an array of strings\n  get categories(): string[]{\n    return this.repository.getCategories();\n  }\n\n  //this method is used to update the selectedCategory property of an object instance. \n  //If a new category value is provided, it is assigned to the selectedCategory property. If no argument is provided, then the selectedCategory property is set to undefined.\n  changeCategory(newCategory?: any){\n    this.selectedCategory = newCategory\n  }\n\n//a pagination feature that allows the user to navigate between pages of data. \n//When called, this method will update the selectedPage property of the object to the specified new page number, thereby changing the currently displayed page of data.\n  changePage(newPage: number){\n    this.selectedPage = newPage;\n  }\n\n\n  //allows the user to change the number of products displayed per page. \n  //When called, this method will update the productsPerPage property of the object to the specified new page size, and then reset the currently displayed page to the first page, ensuring that the new page size takes effect immediately.\n  changePageSize(newSize: number) {\n    this.productsPerPage = Number(newSize);\n    this.changePage(1);\n  }\n\n  // calculates and returns the total number of pages based on the number of products available and the selected category. \n  //This calculation is done by dividing the total number of products by the number of products per page, and rounding up the result to the nearest integer.\n  get pageCount(): number {\n    return Math.ceil(this.repository\n      .getProducts(this.selectedCategory).length / this.productsPerPage)\n\n  }\n\n  addProductToCart(product: Product) {\n    this.cart.addLine(product);\n    this.router.navigateByUrl(\"/cart\")//to navigate to the /cart URL.\n  }\n\n\n}\n\n    \n\n    \n        \n    \n    \n         BASIC INTIMATES\n        \n    \n    \n    \n        \n            \n            \n                Home\n            \n            \n            \n            {{ cat }}\n            \n\n            \n                Admin\n            \n        \n        \n\n            \n            \n                \n                    {{ product.name }}\n                    \n                        {{ product.price | currency: \"Ksh.\":\"symbol\":\"1.0-0\"}}\n                    \n                \n                {{ product.description}}\n                    \n                    Add To Cart\n\n                    \n                \n            \n\n            \n            \n             \n                3 per Page\n                4 per Page\n                6 per Page\n                8 per Page\n             \n            \n\n            \n            \n                \n                {{ page }}\n                \n            \n\n        \n    \n\n\n    \n\n    \n                \n                    ./store.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 BASIC INTIMATES                                                                    Home                                                {{ cat }}                                        Admin                                                                                        {{ product.name }}                                            {{ product.price | currency: \"Ksh.\":\"symbol\":\"1.0-0\"}}                                                    {{ product.description}}                                        Add To Cart                                                                                                     3 per Page                4 per Page                6 per Page                8 per Page                                                                                 {{ page }}                                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartDetailComponent', 'selector': 'app-cart-detail'},{'name': 'CartSummaryComponent', 'selector': 'app-cart-summary'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'OrderTableComponent', 'selector': 'app-order-table'},{'name': 'ProductEditorComponent', 'selector': 'app-product-editor'},{'name': 'ProductTableComponent', 'selector': 'app-product-table'},{'name': 'StoreComponent', 'selector': 'app-store'}];\n    var DIRECTIVES = [{'name': 'CounterDirective', 'selector': '[counterOf]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreFirstGuard.html":{"url":"injectables/StoreFirstGuard.html","title":"injectable - StoreFirstGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StoreFirstGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/storeFirst.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                firstNavigation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/storeFirst.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/storeFirst.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        firstNavigation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/storeFirst.guard.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { StoreComponent } from \"./components/store/store.component\";\n\n@Injectable()\nexport class StoreFirstGuard {\n    private firstNavigation = true;\n\n    constructor(private router: Router){}\n\n    canActivate(route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): boolean {\n            if(this.firstNavigation){\n                this.firstNavigation = false;\n                if (route.component != StoreComponent) {\n                    this.router.navigateByUrl(\"/\");\n                    return false;\n                }\n            }\n            return true;\n        }\n}\n//route guards are used to govern the routing system.\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StoreModule\n\n\n\ncluster_StoreModule_exports\n\n\n\ncluster_StoreModule_declarations\n\n\n\ncluster_StoreModule_imports\n\n\n\n\nCartDetailComponent\n\nCartDetailComponent\n\n\n\nStoreModule\n\nStoreModule\n\nStoreModule -->\n\nCartDetailComponent->StoreModule\n\n\n\n\n\nCartSummaryComponent\n\nCartSummaryComponent\n\nStoreModule -->\n\nCartSummaryComponent->StoreModule\n\n\n\n\n\nCheckoutComponent\n\nCheckoutComponent\n\nStoreModule -->\n\nCheckoutComponent->StoreModule\n\n\n\n\n\nCounterDirective\n\nCounterDirective\n\nStoreModule -->\n\nCounterDirective->StoreModule\n\n\n\n\n\nStoreComponent\n\nStoreComponent\n\nStoreModule -->\n\nStoreComponent->StoreModule\n\n\n\n\n\nCartDetailComponent \n\nCartDetailComponent \n\nCartDetailComponent  -->\n\nStoreModule->CartDetailComponent \n\n\n\n\n\nCheckoutComponent \n\nCheckoutComponent \n\nCheckoutComponent  -->\n\nStoreModule->CheckoutComponent \n\n\n\n\n\nStoreComponent \n\nStoreComponent \n\nStoreComponent  -->\n\nStoreModule->StoreComponent \n\n\n\n\n\nProductModule\n\nProductModule\n\nStoreModule -->\n\nProductModule->StoreModule\n\n\n\nStoreModule -->\n\nProductModule->StoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/store.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CartDetailComponent\n                        \n                        \n                            CartSummaryComponent\n                        \n                        \n                            CheckoutComponent\n                        \n                        \n                            CounterDirective\n                        \n                        \n                            StoreComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductModule\n                        \n                        \n                            ProductModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CartDetailComponent\n                        \n                        \n                            CheckoutComponent\n                        \n                        \n                            StoreComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { RouterModule } from \"@angular/router\";\nimport { CartDetailComponent } from \"../components/cart-detail/cart-detail.component\";\nimport { CartSummaryComponent } from \"../components/cart-summary/cart-summary.component\";\nimport { CheckoutComponent } from \"../components/checkout/checkout.component\";\nimport { StoreComponent } from \"../components/store/store.component\";\nimport { CounterDirective } from \"../directives/counter.directive\";\nimport { ProductModule } from \"./product.module\";\n\n@NgModule({\n    imports: [ProductModule,\n              BrowserModule, \n              FormsModule,\n              ProductModule,\n              RouterModule\n            \n              \n            ],\n    declarations: [StoreComponent,\n                   CounterDirective, \n                   CartSummaryComponent,\n                   CartDetailComponent,\n                   CheckoutComponent\n                ],\n    exports: [StoreComponent,\n              CartDetailComponent,\n              CheckoutComponent\n\n    ]\n})\nexport class StoreModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/admin/admin.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/admin/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/admin/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/admin/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/admin/order-table/order-table.component.ts\n            \n            component\n            OrderTableComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/admin/product-editor/product-editor.component.ts\n            \n            component\n            ProductEditorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/admin/product-table/product-table.component.ts\n            \n            component\n            ProductTableComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/cart-detail/cart-detail.component.ts\n            \n            component\n            CartDetailComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/cart-summary/cart-summary.component.ts\n            \n            component\n            CartSummaryComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/checkout/checkout.component.ts\n            \n            component\n            CheckoutComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/store/store.component.ts\n            \n            component\n            StoreComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/directives/counter.directive.ts\n            \n            directive\n            CounterDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/directives/counter.directive.ts\n            \n            class\n            CounterDirectiveContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/cart.model.ts\n            \n            class\n            CartLine\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/cart.model.ts\n            \n            injectable\n            Cart\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/order.model.ts\n            \n            injectable\n            Order\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/order.repository.ts\n            \n            injectable\n            OrderRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/product.model.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/product.repository.ts\n            \n            injectable\n            ProductRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/rest.datasource.ts\n            \n            injectable\n            RestDataSource\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/models/rest.datasource.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/rest.datasource.ts\n            \n            variable\n            PROTOCOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/static.datasource.ts\n            \n            injectable\n            StaticDataSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/storeFirst.guard.ts\n            \n            injectable\n            StoreFirstGuard\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.0.0\n        \n            @angular/common : ^15.0.0\n        \n            @angular/compiler : ^15.0.0\n        \n            @angular/core : ^15.0.0\n        \n            @angular/forms : ^15.0.0\n        \n            @angular/platform-browser : ^15.0.0\n        \n            @angular/platform-browser-dynamic : ^15.0.0\n        \n            @angular/router : ^15.0.0\n        \n            @fortawesome/fontawesome-free : ^5.12.1\n        \n            bootstrap : ^4.4.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nElevate\nThis project was generated with Angular CLI version 15.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_StoreModule\n\n\n\ncluster_StoreModule_declarations\n\n\n\ncluster_StoreModule_exports\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAdminModule -->\n\nAuthComponent->AdminModule\n\n\n\n\n\nOrderTableComponent\n\nOrderTableComponent\n\nAdminModule -->\n\nOrderTableComponent->AdminModule\n\n\n\n\n\nProductEditorComponent\n\nProductEditorComponent\n\nAdminModule -->\n\nProductEditorComponent->AdminModule\n\n\n\n\n\nProductTableComponent\n\nProductTableComponent\n\nAdminModule -->\n\nProductTableComponent->AdminModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAdminModule -->\n\nAuthGuard->AdminModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\nCartDetailComponent \n\nCartDetailComponent \n\nCartDetailComponent  -->\n\nStoreModule->CartDetailComponent \n\n\n\n\n\nCheckoutComponent \n\nCheckoutComponent \n\nCheckoutComponent  -->\n\nStoreModule->CheckoutComponent \n\n\n\n\n\nStoreComponent \n\nStoreComponent \n\nStoreComponent  -->\n\nStoreModule->StoreComponent \n\n\n\n\n\nStoreFirstGuard\n\nStoreFirstGuard\n\nAppRoutingModule -->\n\nStoreFirstGuard->AppRoutingModule\n\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nAuthService->ProductModule\n\n\n\n\n\nCart\n\nCart\n\nProductModule -->\n\nCart->ProductModule\n\n\n\n\n\nOrder\n\nOrder\n\nProductModule -->\n\nOrder->ProductModule\n\n\n\n\n\nOrderRepository\n\nOrderRepository\n\nProductModule -->\n\nOrderRepository->ProductModule\n\n\n\n\n\nProductRepository\n\nProductRepository\n\nProductModule -->\n\nProductRepository->ProductModule\n\n\n\n\n\nRestDataSource\n\nRestDataSource\n\nProductModule -->\n\nRestDataSource->ProductModule\n\n\n\nStoreModule -->\n\nProductModule->StoreModule\n\n\n\nStoreModule -->\n\nProductModule->StoreModule\n\n\n\n\n\nCartDetailComponent\n\nCartDetailComponent\n\nStoreModule -->\n\nCartDetailComponent->StoreModule\n\n\n\n\n\nCartSummaryComponent\n\nCartSummaryComponent\n\nStoreModule -->\n\nCartSummaryComponent->StoreModule\n\n\n\n\n\nCheckoutComponent\n\nCheckoutComponent\n\nStoreModule -->\n\nCheckoutComponent->StoreModule\n\n\n\n\n\nCounterDirective\n\nCounterDirective\n\nStoreModule -->\n\nCounterDirective->StoreModule\n\n\n\n\n\nStoreComponent\n\nStoreComponent\n\nStoreModule -->\n\nStoreComponent->StoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PORT   (src/.../rest.datasource.ts)\n                        \n                        \n                            PROTOCOL   (src/.../rest.datasource.ts)\n                        \n                        \n                            routing   (src/.../admin.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/rest.datasource.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3500\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROTOCOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http\"\n                    \n                \n\n\n        \n    \n\n    src/app/admin/admin.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forChild([\n    { path: \"auth\", component: AuthComponent },\n    { \n        path: \"main\", component: AdminComponent , canActivate: [AuthGuard],\n        children: [\n            { path: \"products/:mode/:id\", component: ProductEditorComponent},\n            { path: \"products/:mode/\", component: ProductEditorComponent},\n            { path: \"products\", component: ProductTableComponent},\n            { path: \"orders\", component: OrderTableComponent},\n            { path: \"**\", redirectTo: \"products\"},\n        ]\n    },\n    { path: \"**\", redirectTo: \"auth\" }\n\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
